{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { getCodeFromUrl, exchangeCodeForToken, login } from './services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  useEffect(() => {\n    const code = getCodeFromUrl();\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\n    if (code) {\n      exchangeCodeForToken(code).then(() => {\n        window.history.replaceState({}, document.title, \"/\");\n        window.location.href = `${backendUrl}/dashboard`;\n      }).catch(err => console.error(\"Erro na troca de token:\", err));\n    } else {\n      const token = localStorage.getItem('id_token');\n      if (!token) {\n        login();\n      } else {\n        window.location.href = `${backendUrl}/dashboard`;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Bem-vindo ao AdamChat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getCodeFromUrl","exchangeCodeForToken","login","jsxDEV","_jsxDEV","App","_s","code","backendUrl","process","env","REACT_APP_BACKEND_URL","then","window","history","replaceState","document","title","location","href","catch","err","console","error","token","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { getCodeFromUrl, exchangeCodeForToken, login } from './services/auth';\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    const code = getCodeFromUrl();\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n    if (code) {\r\n      exchangeCodeForToken(code)\r\n        .then(() => {\r\n          window.history.replaceState({}, document.title, \"/\");\r\n          window.location.href = `${backendUrl}/dashboard`;\r\n        })\r\n        .catch((err) => console.error(\"Erro na troca de token:\", err));\r\n    } else {\r\n      const token = localStorage.getItem('id_token');\r\n      if (!token) {\r\n        login();\r\n      } else {\r\n        window.location.href = `${backendUrl}/dashboard`;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return <h1>Bem-vindo ao AdamChat</h1>;\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,oBAAoB,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBP,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAGP,cAAc,CAAC,CAAC;IAC7B,MAAMQ,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;IACpD,IAAIJ,IAAI,EAAE;MACRN,oBAAoB,CAACM,IAAI,CAAC,CACvBK,IAAI,CAAC,MAAM;QACVC,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAE,GAAG,CAAC;QACpDJ,MAAM,CAACK,QAAQ,CAACC,IAAI,GAAG,GAAGX,UAAU,YAAY;MAClD,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;IAClE,CAAC,MAAM;MACL,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC9C,IAAI,CAACF,KAAK,EAAE;QACVtB,KAAK,CAAC,CAAC;MACT,CAAC,MAAM;QACLW,MAAM,CAACK,QAAQ,CAACC,IAAI,GAAG,GAAGX,UAAU,YAAY;MAClD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOJ,OAAA;IAAAuB,QAAA,EAAI;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACvC,CAAC;AAACzB,EAAA,CAtBID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}