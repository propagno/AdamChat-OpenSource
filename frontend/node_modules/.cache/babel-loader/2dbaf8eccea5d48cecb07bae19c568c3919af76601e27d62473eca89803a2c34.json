{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ChatPage.js\",\n  _s = $RefreshSig$();\n// src/components/ChatPage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, AppBar, Toolbar, Typography, TextField, IconButton, Paper, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\n// Lista de agentes (exemplo)\nconst agents = [{\n  id: 1,\n  name: 'Agente Alpha'\n}, {\n  id: 2,\n  name: 'Agente Beta'\n}, {\n  id: 3,\n  name: 'Agente Gamma'\n}];\n\n// Estilização para as mensagens do usuário e da AI\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  maxWidth: '80%',\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nfunction ChatPage() {\n  _s();\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const chatEndRef = useRef(null);\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n    // Aqui você pode carregar o histórico específico do agente, se aplicável\n  };\n  const handleSend = () => {\n    if (!message.trim()) return;\n\n    // Adiciona a mensagem do usuário\n    const newMessage = {\n      sender: 'user',\n      text: message\n    };\n    const newHistory = [...chatHistory, newMessage];\n    setChatHistory(newHistory);\n    setMessage('');\n\n    // Simulação: chamada à API de GEN AI para obter resposta\n    setTimeout(() => {\n      const aiResponse = {\n        sender: 'ai',\n        text: `Resposta do ${selectedAgent.name} para \"${message}\"`\n      };\n      setChatHistory(prevHistory => [...prevHistory, aiResponse]);\n    }, 1000);\n  };\n\n  // Rola para o fim do chat sempre que o histórico for atualizado\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        sx: {\n          backgroundColor: '#1976d2',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: [\"Chat com \", selectedAgent.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          p: 2,\n          mb: 2,\n          border: '1px solid #ddd',\n          borderRadius: 2,\n          backgroundColor: '#fafafa',\n          overflowY: 'auto',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          elevation: 2,\n          sender: msg.sender,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Digite sua mensagem...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSend();\n              e.preventDefault();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: handleSend,\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"/8OTydphvRd7HVvdLyr3GFsLFwo=\");\n_c2 = ChatPage;\nexport default ChatPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"ChatPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Drawer","List","ListItem","ListItemButton","ListItemText","AppBar","Toolbar","Typography","TextField","IconButton","Paper","Divider","SendIcon","styled","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","primary","main","grey","color","contrastText","text","maxWidth","alignSelf","marginBottom","borderRadius","_c","ChatPage","_s","selectedAgent","setSelectedAgent","message","setMessage","chatHistory","setChatHistory","chatEndRef","handleAgentSelect","agent","handleSend","trim","newMessage","newHistory","setTimeout","aiResponse","prevHistory","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","flexDirection","position","mb","border","overflowY","msg","index","elevation","ref","alignItems","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","preventDefault","ml","_c2","$RefreshReg$"],"sources":["/app/src/components/ChatPage.js"],"sourcesContent":["// src/components/ChatPage.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n  Paper,\r\n  Divider\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { styled } from '@mui/system';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// Lista de agentes (exemplo)\r\nconst agents = [\r\n  { id: 1, name: 'Agente Alpha' },\r\n  { id: 2, name: 'Agente Beta' },\r\n  { id: 3, name: 'Agente Gamma' },\r\n];\r\n\r\n// Estilização para as mensagens do usuário e da AI\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\r\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nfunction ChatPage() {\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [message, setMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const chatEndRef = useRef(null);\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n    // Aqui você pode carregar o histórico específico do agente, se aplicável\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!message.trim()) return;\r\n\r\n    // Adiciona a mensagem do usuário\r\n    const newMessage = { sender: 'user', text: message };\r\n    const newHistory = [...chatHistory, newMessage];\r\n    setChatHistory(newHistory);\r\n    setMessage('');\r\n\r\n    // Simulação: chamada à API de GEN AI para obter resposta\r\n    setTimeout(() => {\r\n      const aiResponse = { sender: 'ai', text: `Resposta do ${selectedAgent.name} para \"${message}\"` };\r\n      setChatHistory((prevHistory) => [...prevHistory, aiResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  // Rola para o fim do chat sempre que o histórico for atualizado\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      {/* Menu Lateral para Agentes */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agentes\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Área Principal do Chat */}\r\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 2, display: 'flex', flexDirection: 'column' }}>\r\n        <AppBar position=\"static\" sx={{ backgroundColor: '#1976d2', mb: 2 }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n              Chat com {selectedAgent.name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        {/* Histórico do Chat */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            p: 2,\r\n            mb: 2,\r\n            border: '1px solid #ddd',\r\n            borderRadius: 2,\r\n            backgroundColor: '#fafafa',\r\n            overflowY: 'auto',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          {chatHistory.map((msg, index) => (\r\n            <MessageBubble key={index} elevation={2} sender={msg.sender}>\r\n              {msg.text}\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n\r\n        {/* Campo de Entrada */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Digite sua mensagem...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleSend();\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <IconButton color=\"primary\" onClick={handleSend} sx={{ ml: 1 }}>\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}