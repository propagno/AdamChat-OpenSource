{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/ChatPage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\n// Lista de agentes (exemplo)\nconst agents = [{\n  id: 1,\n  name: 'Agente Alpha'\n}, {\n  id: 2,\n  name: 'Agente Beta'\n}, {\n  id: 3,\n  name: 'Agente Gamma'\n}];\n\n// Estilização para as mensagens do usuário e da AI\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  maxWidth: '80%',\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst ChatPage = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]); // Agente selecionado\n  const chatEndRef = useRef(null);\n  // Aqui você deve ter um identificador do usuário (por exemplo, extraído do token do Keycloak)\n  const user_id = \"usuario_exemplo\";\n\n  // Função para atualizar o agente selecionado\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n    // Aqui, se necessário, você pode carregar um histórico específico para esse agente\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\n        user_id,\n        message\n      });\n      setHistory(response.data.history);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: \"Chat com GEN AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #ddd',\n          borderRadius: 2,\n          backgroundColor: '#fafafa',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Digite sua mensagem...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              sendMessage();\n              e.preventDefault();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"ptzzBHRGgvaTAVZyRqWDb5cs7Mg=\");\n_c2 = ChatPage;\nexport default ChatPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"ChatPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","SendIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","styled","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","primary","main","grey","color","contrastText","text","maxWidth","alignSelf","marginBottom","borderRadius","_c","ChatPage","_s","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","chatEndRef","user_id","handleAgentSelect","agent","sendMessage","trim","response","post","process","env","REACT_APP_BACKEND_URL","data","error","console","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","border","entry","index","ref","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","preventDefault","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/ChatPage.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// Lista de agentes (exemplo)\r\nconst agents = [\r\n  { id: 1, name: 'Agente Alpha' },\r\n  { id: 2, name: 'Agente Beta' },\r\n  { id: 3, name: 'Agente Gamma' },\r\n];\r\n\r\n// Estilização para as mensagens do usuário e da AI\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\r\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst ChatPage = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);  // Agente selecionado\r\n  const chatEndRef = useRef(null);\r\n  // Aqui você deve ter um identificador do usuário (por exemplo, extraído do token do Keycloak)\r\n  const user_id = \"usuario_exemplo\";\r\n\r\n  // Função para atualizar o agente selecionado\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n    // Aqui, se necessário, você pode carregar um histórico específico para esse agente\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n    \r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BACKEND_URL}/chat`, \r\n        { user_id, message }\r\n      );\r\n      setHistory(response.data.history);\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      {/* Drawer fixo para a lista de agentes */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agentes\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      \r\n      {/* Área principal do chat, deslocada para a direita */}\r\n      <Box \r\n        component=\"main\" \r\n        sx={{ flexGrow: 1, p: 3, ml: `${drawerWidth}px`, display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>Chat com GEN AI</Typography>\r\n        \r\n        {/* Histórico do Chat */}\r\n        <Box \r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #ddd',\r\n            borderRadius: 2,\r\n            backgroundColor: '#fafafa',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              <Typography variant=\"body1\">{entry.text}</Typography>\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n        \r\n        {/* Campo de entrada para novas mensagens */}\r\n        <Box sx={{ display: 'flex' }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Digite sua mensagem...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                sendMessage();\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n            <SendIcon />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}