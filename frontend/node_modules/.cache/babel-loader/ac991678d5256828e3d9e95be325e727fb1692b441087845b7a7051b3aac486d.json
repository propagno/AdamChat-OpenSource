{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport SendIcon from '@mui/icons-material/Send';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, FormControl, InputLabel, Select, MenuItem, IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useKeycloak } from '@react-keycloak/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst agents = [{\n  id: 1,\n  name: 'Agent Médico'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\n\n// Container de mensagem com espaçamento aprimorado\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  position: 'relative',\n  padding: theme.spacing(1.5, 2),\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\n  maxWidth: '80%',\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst IconBar = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  gap: theme.spacing(1),\n  marginTop: theme.spacing(1)\n}));\n_c2 = IconBar;\nconst Chat = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n  const [isWaitingResponse, setIsWaitingResponse] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const timerRef = useRef(null);\n  // Estados para o modal de re-run (edição para reprocessar a mensagem)\n  const [editOpen, setEditOpen] = useState(false);\n  const [editText, setEditText] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(null);\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n\n  // Função simples para gerar um ID único para as mensagens\n  const generateId = () => Math.random().toString(36).substring(2, 9);\n\n  // Envia a mensagem do usuário: adiciona imediatamente a mensagem no histórico e aguarda resposta da IA\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\n    const userMsgId = generateId();\n\n    // Insere imediatamente a mensagem do usuário no histórico\n    const userPayload = {\n      id: userMsgId,\n      sender: user_email,\n      text: message,\n      agent: selectedAgent.name.toLowerCase(),\n      gpt: selectedGpt\n    };\n    setHistory(prev => [...prev, userPayload]);\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt,\n      userMsgId\n    } : {\n      user_id,\n      user_email,\n      message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt,\n      userMsgId\n    };\n    setMessage(\"\");\n    setIsWaitingResponse(true);\n    setElapsedTime(0);\n    const startTime = Date.now();\n    timerRef.current = setInterval(() => {\n      setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n    }, 1000);\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    } finally {\n      setIsWaitingResponse(false);\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n  };\n\n  // Função para re-run: utiliza a mensagem original do usuário para reprocessar a resposta da IA\n  const handleRerun = async index => {\n    const aiMsg = history[index];\n    if (!aiMsg || !aiMsg.parentId) return;\n    const userMsg = history.find(msg => msg.id === aiMsg.parentId);\n    if (!userMsg) return;\n    await sendRerunMessage(userMsg.text);\n  };\n  const sendRerunMessage = async text => {\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: text,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    } : {\n      user_id,\n      user_email,\n      message: text,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n    } catch (error) {\n      console.error(\"Erro ao re-run mensagem:\", error);\n    }\n  };\n\n  // Função para deletar uma mensagem do histórico\n  const handleDelete = index => {\n    setHistory(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    console.log(\"Texto copiado:\", text);\n  };\n\n  // Modal de re-run para reprocessar a mensagem (edição)\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setEditText(\"\");\n    setEditIndex(null);\n  };\n  const handleEditConfirm = () => {\n    if (editText.trim() === \"\" || editIndex === null) return;\n    sendRerunMessage(editText);\n    setEditOpen(false);\n    setEditText(\"\");\n    setEditIndex(null);\n  };\n  const handleEdit = index => {\n    // Abre o modal para reprocessar a resposta da IA (não edita a pergunta)\n    const aiMsg = history[index];\n    if (!aiMsg || aiMsg.sender !== \"ai\") return;\n    setEditText(aiMsg.text);\n    setEditIndex(index);\n    setEditOpen(true);\n  };\n\n  // Carrega o histórico de mensagens ao montar o componente\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/chat/history`, {\n          params: {\n            user_id\n          }\n        });\n        setHistory(response.data.history);\n      } catch (error) {\n        console.error(\"Erro ao carregar histórico:\", error);\n      }\n    };\n    fetchHistory();\n  }, [user_id]);\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", selectedAgent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), isWaitingResponse && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Aguarde... (Tempo de resposta: \", elapsedTime, \"s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: [entry.sender === \"ai\" ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            remarkPlugins: [remarkGfm],\n            components: {\n              h1: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this),\n              h2: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this),\n              p: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this),\n              ul: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"ul\",\n                sx: {\n                  pl: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this),\n              li: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"li\",\n                sx: {\n                  mb: 0.5\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 23\n              }, this)\n            },\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              display: \"block\",\n              children: [\"Agent: \", entry.agent, \" | GPT: \", entry.gpt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconBar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleRerun(index),\n                children: /*#__PURE__*/_jsxDEV(ReplayIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleDelete(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => handleCopy(entry.text),\n                children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Digite sua mensagem...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                sendMessage();\n                e.preventDefault();\n              }\n            },\n            sx: {\n              backgroundColor: '#1e1e1e',\n              input: {\n                color: '#fff'\n              },\n              '& fieldset': {\n                borderColor: '#333'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: sendMessage,\n            sx: {\n              ml: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gpt-select-label\",\n              sx: {\n                color: \"#fff\"\n              },\n              children: \"Selecionar GPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gpt-select-label\",\n              value: selectedGpt,\n              label: \"Selecionar GPT\",\n              onChange: handleGptSelect,\n              sx: {\n                color: \"#fff\",\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '& .MuiSvgIcon-root': {\n                  color: \"#fff\"\n                }\n              },\n              children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: provider.id,\n                children: provider.name\n              }, provider.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editOpen,\n      onClose: handleEditClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Reprocessar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          value: editText,\n          onChange: e => setEditText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleEditConfirm,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"YNca96jwygMB6G9euQDxF+QznwU=\", false, function () {\n  return [useKeycloak];\n});\n_c3 = Chat;\nexport default Chat;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"IconBar\");\n$RefreshReg$(_c3, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","remarkGfm","SendIcon","ReplayIcon","DeleteIcon","ContentCopyIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","FormControl","InputLabel","Select","MenuItem","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","styled","useKeycloak","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","position","padding","spacing","backgroundColor","palette","grey","primary","main","color","common","white","contrastText","maxWidth","alignSelf","marginBottom","borderRadius","_c","IconBar","display","justifyContent","gap","marginTop","_c2","Chat","_s","keycloak","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","isWaitingResponse","setIsWaitingResponse","elapsedTime","setElapsedTime","timerRef","editOpen","setEditOpen","editText","setEditText","editIndex","setEditIndex","user_id","tokenParsed","sub","user_email","email","handleAgentSelect","agent","handleGptSelect","event","target","value","generateId","Math","random","toString","substring","sendMessage","trim","isMedical","toLowerCase","endpoint","process","env","REACT_APP_BACKEND_URL","userMsgId","userPayload","text","gpt","prev","payload","consultation_data","gptProvider","startTime","Date","now","current","setInterval","floor","response","post","data","error","console","clearInterval","handleRerun","index","aiMsg","parentId","userMsg","find","msg","sendRerunMessage","handleDelete","filter","_","i","handleCopy","navigator","clipboard","writeText","log","handleEditClose","handleEditConfirm","handleEdit","fetchHistory","get","params","scrollIntoView","behavior","sx","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","border","entry","remarkPlugins","components","h1","node","props","fontWeight","mt","h2","ul","pl","li","size","fontSize","ref","fullWidth","placeholder","onChange","e","onKeyPress","key","preventDefault","input","borderColor","labelId","label","provider","open","onClose","multiline","rows","_c3","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Médico' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\n// Container de mensagem com espaçamento aprimorado\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  position: 'relative',\r\n  padding: theme.spacing(1.5, 2),\r\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\r\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\r\n  marginBottom: theme.spacing(2),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst IconBar = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n  gap: theme.spacing(1),\r\n  marginTop: theme.spacing(1),\r\n}));\r\n\r\nconst Chat = () => {\r\n  const { keycloak } = useKeycloak();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n  const [isWaitingResponse, setIsWaitingResponse] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const timerRef = useRef(null);\r\n  // Estados para o modal de re-run (edição para reprocessar a mensagem)\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(null);\r\n\r\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\r\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  // Função simples para gerar um ID único para as mensagens\r\n  const generateId = () => Math.random().toString(36).substring(2, 9);\r\n\r\n  // Envia a mensagem do usuário: adiciona imediatamente a mensagem no histórico e aguarda resposta da IA\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n    \r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\r\n    const userMsgId = generateId();\r\n\r\n    // Insere imediatamente a mensagem do usuário no histórico\r\n    const userPayload = {\r\n      id: userMsgId,\r\n      sender: user_email,\r\n      text: message,\r\n      agent: selectedAgent.name.toLowerCase(),\r\n      gpt: selectedGpt\r\n    };\r\n    setHistory(prev => [...prev, userPayload]);\r\n\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n          userMsgId,\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n          userMsgId,\r\n        };\r\n\r\n    setMessage(\"\");\r\n    setIsWaitingResponse(true);\r\n    setElapsedTime(0);\r\n    const startTime = Date.now();\r\n    timerRef.current = setInterval(() => {\r\n      setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\r\n    }, 1000);\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    } finally {\r\n      setIsWaitingResponse(false);\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n  };\r\n\r\n  // Função para re-run: utiliza a mensagem original do usuário para reprocessar a resposta da IA\r\n  const handleRerun = async (index) => {\r\n    const aiMsg = history[index];\r\n    if (!aiMsg || !aiMsg.parentId) return;\r\n    const userMsg = history.find((msg) => msg.id === aiMsg.parentId);\r\n    if (!userMsg) return;\r\n    await sendRerunMessage(userMsg.text);\r\n  };\r\n\r\n  const sendRerunMessage = async (text) => {\r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: text,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message: text,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        };\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error(\"Erro ao re-run mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  // Função para deletar uma mensagem do histórico\r\n  const handleDelete = (index) => {\r\n    setHistory(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n    console.log(\"Texto copiado:\", text);\r\n  };\r\n\r\n  // Modal de re-run para reprocessar a mensagem (edição)\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n    setEditText(\"\");\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    if (editText.trim() === \"\" || editIndex === null) return;\r\n    sendRerunMessage(editText);\r\n    setEditOpen(false);\r\n    setEditText(\"\");\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    // Abre o modal para reprocessar a resposta da IA (não edita a pergunta)\r\n    const aiMsg = history[index];\r\n    if (!aiMsg || aiMsg.sender !== \"ai\") return;\r\n    setEditText(aiMsg.text);\r\n    setEditIndex(index);\r\n    setEditOpen(true);\r\n  };\r\n\r\n  // Carrega o histórico de mensagens ao montar o componente\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/chat/history`, {\r\n          params: { user_id }\r\n        });\r\n        setHistory(response.data.history);\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar histórico:\", error);\r\n      }\r\n    };\r\n    fetchHistory();\r\n  }, [user_id]);\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212', color: '#fff' }}>\r\n      {/* Barra lateral para seleção de Agents */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n            backgroundColor: '#1e1e1e',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agents\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Área principal do Chat */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: `${drawerWidth}px`,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#121212',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {selectedAgent.name}\r\n        </Typography>\r\n\r\n        {isWaitingResponse && (\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            Aguarde... (Tempo de resposta: {elapsedTime}s)\r\n          </Typography>\r\n        )}\r\n\r\n        {/* Histórico de mensagens com espaçamento aprimorado */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 2,\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              {entry.sender === \"ai\" ? (\r\n                <ReactMarkdown\r\n                  remarkPlugins={[remarkGfm]}\r\n                  components={{\r\n                    h1: ({ node, ...props }) => (\r\n                      <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    h2: ({ node, ...props }) => (\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    p: ({ node, ...props }) => (\r\n                      <Typography variant=\"body1\" sx={{ mb: 1 }} {...props} />\r\n                    ),\r\n                    ul: ({ node, ...props }) => (\r\n                      <Box component=\"ul\" sx={{ pl: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    li: ({ node, ...props }) => (\r\n                      <Box component=\"li\" sx={{ mb: 0.5 }} {...props} />\r\n                    ),\r\n                  }}\r\n                >\r\n                  {entry.text}\r\n                </ReactMarkdown>\r\n              ) : (\r\n                <Typography variant=\"body1\">{entry.text}</Typography>\r\n              )}\r\n              {entry.sender === \"ai\" && (\r\n                <Box sx={{ mt: 1 }}>\r\n                  <Typography variant=\"caption\" display=\"block\">\r\n                    Agent: {entry.agent} | GPT: {entry.gpt}\r\n                  </Typography>\r\n                  <IconBar>\r\n                    <IconButton size=\"small\" onClick={() => handleRerun(index)}>\r\n                      <ReplayIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => handleDelete(index)}>\r\n                      <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => handleCopy(entry.text)}>\r\n                      <ContentCopyIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </IconBar>\r\n                </Box>\r\n              )}\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n\r\n        {/* Campo de entrada, botão e dropdown para selecionar o GPT */}\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n          <Box sx={{ display: 'flex' }}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  sendMessage();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              sx={{\r\n                backgroundColor: '#1e1e1e',\r\n                input: { color: '#fff' },\r\n                '& fieldset': { borderColor: '#333' },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n              <SendIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>\r\n                Selecionar GPT\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecionar GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Modal de re-run para reprocessar a mensagem (edição) */}\r\n      <Dialog open={editOpen} onClose={handleEditClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Reprocessar Mensagem</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            value={editText}\r\n            onChange={(e) => setEditText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditClose}>Cancelar</Button>\r\n          <Button variant=\"contained\" onClick={handleEditConfirm}>Confirmar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}