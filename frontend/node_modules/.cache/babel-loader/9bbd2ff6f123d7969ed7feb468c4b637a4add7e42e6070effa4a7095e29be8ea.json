{"ast":null,"code":"/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return listInScope(stack, pattern.inConstruct, true) && !listInScope(stack, pattern.notInConstruct, false);\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list];\n  }\n  if (!list || list.length === 0) {\n    return none;\n  }\n  let index = -1;\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true;\n    }\n  }\n  return false;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}