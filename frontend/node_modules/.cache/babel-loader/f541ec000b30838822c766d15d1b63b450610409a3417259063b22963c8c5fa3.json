{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, Tabs, Tab, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\n// Dados de exemplo para Agents e GPTs\nconst agents = [{\n  id: 1,\n  name: 'Agent Alpha'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\n\n// Estilização para as mensagens (bubbles)\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[800],\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.common.white,\n  maxWidth: '80%',\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  var _gptProviders$find;\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  // Controle da aba lateral: 0 para Agents, 1 para GPTs pré configurados\n  const [activeTab, setActiveTab] = useState(0);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  // Seleção do provider de GEN AI via dropdown (apenas para GPT's)\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n  const user_id = \"usuario_exemplo\"; // Esse valor idealmente vem do token autenticado\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n\n    // Seleciona o provider:\n    // Se a aba ativa for \"Agents\", vamos usar o nome do agente (em minúsculas) como provider;\n    // Se for \"GPTs\", usa o valor do dropdown.\n    const provider = activeTab === 0 ? selectedAgent.name.toLowerCase() : selectedGpt;\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\n        user_id,\n        message,\n        provider\n      });\n      // O endpoint deve retornar o histórico atualizado\n      setHistory(response.data.history);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Op\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        centered: true,\n        textColor: \"inherit\",\n        indicatorColor: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"GPTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"gpt-select-label\",\n            sx: {\n              color: \"#fff\"\n            },\n            children: \"Selecione o GPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"gpt-select-label\",\n            value: selectedGpt,\n            label: \"Selecione o GPT\",\n            onChange: handleGptSelect,\n            sx: {\n              color: \"#fff\",\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: \"#fff\"\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: \"#fff\"\n              },\n              '& .MuiSvgIcon-root': {\n                color: \"#fff\"\n              }\n            },\n            children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: provider.id,\n              children: provider.name\n            }, provider.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", activeTab === 0 ? selectedAgent.name : (_gptProviders$find = gptProviders.find(g => g.id === selectedGpt)) === null || _gptProviders$find === void 0 ? void 0 : _gptProviders$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Digite sua mensagem...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              sendMessage();\n              e.preventDefault();\n            }\n          },\n          sx: {\n            backgroundColor: '#1e1e1e',\n            input: {\n              color: '#fff'\n            },\n            '& fieldset': {\n              borderColor: '#333'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: sendMessage,\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bow+DHZNbcQNcc+L50Ij06xE3rU=\");\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","SendIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","Tabs","Tab","FormControl","InputLabel","Select","MenuItem","styled","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","primary","main","grey","color","contrastText","common","white","maxWidth","alignSelf","marginBottom","borderRadius","_c","Chat","_s","_gptProviders$find","message","setMessage","history","setHistory","activeTab","setActiveTab","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","user_id","handleTabChange","event","newValue","handleAgentSelect","agent","handleGptSelect","target","value","sendMessage","trim","provider","toLowerCase","response","post","process","env","REACT_APP_BACKEND_URL","data","error","console","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","onChange","centered","textColor","indicatorColor","label","map","disablePadding","selected","onClick","p","fullWidth","size","labelId","borderColor","component","flexGrow","ml","flexDirection","mb","find","g","overflowY","border","entry","index","text","ref","placeholder","e","onKeyPress","key","preventDefault","input","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  Tabs,\r\n  Tab,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// Dados de exemplo para Agents e GPTs\r\nconst agents = [\r\n  { id: 1, name: 'Agent Alpha' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\n// Estilização para as mensagens (bubbles)\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[800],\r\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.common.white,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  // Controle da aba lateral: 0 para Agents, 1 para GPTs pré configurados\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  // Seleção do provider de GEN AI via dropdown (apenas para GPT's)\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n  const user_id = \"usuario_exemplo\"; // Esse valor idealmente vem do token autenticado\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n    \r\n    // Seleciona o provider:\r\n    // Se a aba ativa for \"Agents\", vamos usar o nome do agente (em minúsculas) como provider;\r\n    // Se for \"GPTs\", usa o valor do dropdown.\r\n    const provider = activeTab === 0 ? selectedAgent.name.toLowerCase() : selectedGpt;\r\n    \r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\r\n        user_id,\r\n        message,\r\n        provider,\r\n      });\r\n      // O endpoint deve retornar o histórico atualizado\r\n      setHistory(response.data.history);\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212' }}>\r\n      {/* Barra lateral com abas */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box', backgroundColor: '#1e1e1e', color: '#fff' },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Opções\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <Tabs value={activeTab} onChange={handleTabChange} centered textColor=\"inherit\" indicatorColor=\"secondary\">\r\n          <Tab label=\"Agents\" />\r\n          <Tab label=\"GPTs\" />\r\n        </Tabs>\r\n        <Divider />\r\n        {activeTab === 0 ? (\r\n          <List>\r\n            {agents.map((agent) => (\r\n              <ListItem key={agent.id} disablePadding>\r\n                <ListItemButton\r\n                  selected={selectedAgent.id === agent.id}\r\n                  onClick={() => handleAgentSelect(agent)}\r\n                >\r\n                  <ListItemText primary={agent.name} />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Box sx={{ p: 2 }}>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>Selecione o GPT</InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecione o GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        )}\r\n      </Drawer>\r\n\r\n      {/* Área principal do chat */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, ml: `${drawerWidth}px`, display: 'flex', flexDirection: 'column', backgroundColor: '#121212', color: '#fff' }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {activeTab === 0 ? selectedAgent.name : gptProviders.find(g => g.id === selectedGpt)?.name}\r\n        </Typography>\r\n        \r\n        {/* Histórico do Chat */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              <Typography variant=\"body1\">{entry.text}</Typography>\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n        \r\n        {/* Campo de Entrada e Botão */}\r\n        <Box sx={{ display: 'flex' }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Digite sua mensagem...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                sendMessage();\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n            sx={{\r\n              backgroundColor: '#1e1e1e',\r\n              input: { color: '#fff' },\r\n              '& fieldset': { borderColor: '#333' }\r\n            }}\r\n          />\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n            <SendIcon />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SACEC,GAAG,EACHC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,IAAI,EACJC,GAAG,EACHC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAG,GAAG;;AAEvB;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAc,CAAC,EAC9B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAa,CAAC,EAC7B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAc,CAAC,CAC/B;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,EAClC;EAAED,EAAE,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,EAChC;EAAED,EAAE,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAY,CAAC,CACvC;;AAED;AACA,MAAME,aAAa,GAAGR,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC;EAAEiB,KAAK;EAAEC;AAAO,CAAC,MAAM;EAC1DC,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5BC,eAAe,EAAEH,MAAM,KAAK,MAAM,GAAGD,KAAK,CAACK,OAAO,CAACC,OAAO,CAACC,IAAI,GAAGP,KAAK,CAACK,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;EACzFC,KAAK,EAAER,MAAM,KAAK,MAAM,GAAGD,KAAK,CAACK,OAAO,CAACC,OAAO,CAACI,YAAY,GAAGV,KAAK,CAACK,OAAO,CAACM,MAAM,CAACC,KAAK;EAC1FC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAEb,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY;EACxDc,YAAY,EAAEf,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;EAC9Ba,YAAY,EAAEhB,KAAK,CAACG,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAACc,EAAA,GARElB,aAAa;AAUnB,MAAMmB,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuD,OAAO,EAAEC,UAAU,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAACyD,SAAS,EAAEC,YAAY,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG5D,QAAQ,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D;EACA,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAAC8B,YAAY,CAAC,CAAC,CAAC,CAACF,EAAE,CAAC;EAClE,MAAMmC,UAAU,GAAG9D,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM+D,OAAO,GAAG,iBAAiB,CAAC,CAAC;;EAEnC,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC3CT,YAAY,CAACS,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAIJ,KAAK,IAAK;IACjCJ,cAAc,CAACI,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIpB,OAAO,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE3B;IACA;IACA;IACA,MAAMC,QAAQ,GAAGlB,SAAS,KAAK,CAAC,GAAGE,aAAa,CAAC9B,IAAI,CAAC+C,WAAW,CAAC,CAAC,GAAGf,WAAW;IAEjF,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAM1E,KAAK,CAAC2E,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,OAAO,EAAE;QAC7EjB,OAAO;QACPX,OAAO;QACPsB;MACF,CAAC,CAAC;MACF;MACAnB,UAAU,CAACqB,QAAQ,CAACK,IAAI,CAAC3B,OAAO,CAAC;MACjCD,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDjF,SAAS,CAAC,MAAM;IACd,IAAI6D,UAAU,CAACsB,OAAO,EAAE;MACtBtB,UAAU,CAACsB,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE,CAAChC,OAAO,CAAC,CAAC;EAEb,oBACE9B,OAAA,CAACpB,GAAG;IAACmF,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEtD,eAAe,EAAE;IAAU,CAAE;IAAAuD,QAAA,gBAExElE,OAAA,CAACnB,MAAM;MACLsF,OAAO,EAAC,WAAW;MACnBJ,EAAE,EAAE;QACFK,KAAK,EAAEnE,WAAW;QAClBoE,UAAU,EAAE,CAAC;QACb,CAAC,oBAAoB,GAAG;UAAED,KAAK,EAAEnE,WAAW;UAAEqE,SAAS,EAAE,YAAY;UAAE3D,eAAe,EAAE,SAAS;UAAEK,KAAK,EAAE;QAAO;MACnH,CAAE;MAAAkD,QAAA,gBAEFlE,OAAA,CAACd,OAAO;QAAAgF,QAAA,eACNlE,OAAA,CAACb,UAAU;UAACgF,OAAO,EAAC,IAAI;UAACI,MAAM;UAAAL,QAAA,EAAC;QAEhC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACV3E,OAAA,CAACT,OAAO;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX3E,OAAA,CAACR,IAAI;QAACuD,KAAK,EAAEf,SAAU;QAAC4C,QAAQ,EAAEpC,eAAgB;QAACqC,QAAQ;QAACC,SAAS,EAAC,SAAS;QAACC,cAAc,EAAC,WAAW;QAAAb,QAAA,gBACxGlE,OAAA,CAACP,GAAG;UAACuF,KAAK,EAAC;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtB3E,OAAA,CAACP,GAAG;UAACuF,KAAK,EAAC;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACP3E,OAAA,CAACT,OAAO;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACV3C,SAAS,KAAK,CAAC,gBACdhC,OAAA,CAAClB,IAAI;QAAAoF,QAAA,EACFhE,MAAM,CAAC+E,GAAG,CAAErC,KAAK,iBAChB5C,OAAA,CAACjB,QAAQ;UAAgBmG,cAAc;UAAAhB,QAAA,eACrClE,OAAA,CAAChB,cAAc;YACbmG,QAAQ,EAAEjD,aAAa,CAAC/B,EAAE,KAAKyC,KAAK,CAACzC,EAAG;YACxCiF,OAAO,EAAEA,CAAA,KAAMzC,iBAAiB,CAACC,KAAK,CAAE;YAAAsB,QAAA,eAExClE,OAAA,CAACf,YAAY;cAAC4B,OAAO,EAAE+B,KAAK,CAACxC;YAAK;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC,GANJ/B,KAAK,CAACzC,EAAE;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAEP3E,OAAA,CAACpB,GAAG;QAACmF,EAAE,EAAE;UAAEsB,CAAC,EAAE;QAAE,CAAE;QAAAnB,QAAA,eAChBlE,OAAA,CAACN,WAAW;UAAC4F,SAAS;UAACnB,OAAO,EAAC,UAAU;UAACoB,IAAI,EAAC,OAAO;UAAArB,QAAA,gBACpDlE,OAAA,CAACL,UAAU;YAACQ,EAAE,EAAC,kBAAkB;YAAC4D,EAAE,EAAE;cAAE/C,KAAK,EAAE;YAAO,CAAE;YAAAkD,QAAA,EAAC;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACrF3E,OAAA,CAACJ,MAAM;YACL4F,OAAO,EAAC,kBAAkB;YAC1BzC,KAAK,EAAEX,WAAY;YACnB4C,KAAK,EAAC,iBAAiB;YACvBJ,QAAQ,EAAE/B,eAAgB;YAC1BkB,EAAE,EAAE;cACF/C,KAAK,EAAE,MAAM;cACb,kCAAkC,EAAE;gBAAEyE,WAAW,EAAE;cAAO,CAAC;cAC3D,gDAAgD,EAAE;gBAAEA,WAAW,EAAE;cAAO,CAAC;cACzE,oBAAoB,EAAE;gBAAEzE,KAAK,EAAE;cAAO;YACxC,CAAE;YAAAkD,QAAA,EAED7D,YAAY,CAAC4E,GAAG,CAAE/B,QAAQ,iBACzBlD,OAAA,CAACH,QAAQ;cAAmBkD,KAAK,EAAEG,QAAQ,CAAC/C,EAAG;cAAA+D,QAAA,EAC5ChB,QAAQ,CAAC9C;YAAI,GADD8C,QAAQ,CAAC/C,EAAE;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAGT3E,OAAA,CAACpB,GAAG;MACF8G,SAAS,EAAC,MAAM;MAChB3B,EAAE,EAAE;QAAE4B,QAAQ,EAAE,CAAC;QAAEN,CAAC,EAAE,CAAC;QAAEO,EAAE,EAAE,GAAG3F,WAAW,IAAI;QAAE+D,OAAO,EAAE,MAAM;QAAE6B,aAAa,EAAE,QAAQ;QAAElF,eAAe,EAAE,SAAS;QAAEK,KAAK,EAAE;MAAO,CAAE;MAAAkD,QAAA,gBAEvIlE,OAAA,CAACb,UAAU;QAACgF,OAAO,EAAC,IAAI;QAACJ,EAAE,EAAE;UAAE+B,EAAE,EAAE;QAAE,CAAE;QAAA5B,QAAA,GAAC,WAC7B,EAAClC,SAAS,KAAK,CAAC,GAAGE,aAAa,CAAC9B,IAAI,IAAAuB,kBAAA,GAAGtB,YAAY,CAAC0F,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7F,EAAE,KAAKiC,WAAW,CAAC,cAAAT,kBAAA,uBAA5CA,kBAAA,CAA8CvB,IAAI;MAAA;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC,eAGb3E,OAAA,CAACpB,GAAG;QACFmF,EAAE,EAAE;UACF4B,QAAQ,EAAE,CAAC;UACXM,SAAS,EAAE,MAAM;UACjBH,EAAE,EAAE,CAAC;UACLT,CAAC,EAAE,CAAC;UACJa,MAAM,EAAE,gBAAgB;UACxB3E,YAAY,EAAE,CAAC;UACfZ,eAAe,EAAE,SAAS;UAC1BqD,OAAO,EAAE,MAAM;UACf6B,aAAa,EAAE;QACjB,CAAE;QAAA3B,QAAA,GAEDpC,OAAO,CAACmD,GAAG,CAAC,CAACkB,KAAK,EAAEC,KAAK,kBACxBpG,OAAA,CAACM,aAAa;UAAaE,MAAM,EAAE2F,KAAK,CAAC3F,MAAO;UAAA0D,QAAA,eAC9ClE,OAAA,CAACb,UAAU;YAACgF,OAAO,EAAC,OAAO;YAAAD,QAAA,EAAEiC,KAAK,CAACE;UAAI;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC,GADnCyB,KAAK;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAChB,CAAC,eACF3E,OAAA;UAAKsG,GAAG,EAAEhE;QAAW;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAGN3E,OAAA,CAACpB,GAAG;QAACmF,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAE,QAAA,gBAC3BlE,OAAA,CAACZ,SAAS;UACRkG,SAAS;UACTnB,OAAO,EAAC,UAAU;UAClBoC,WAAW,EAAC,wBAAwB;UACpCxD,KAAK,EAAEnB,OAAQ;UACfgD,QAAQ,EAAG4B,CAAC,IAAK3E,UAAU,CAAC2E,CAAC,CAAC1D,MAAM,CAACC,KAAK,CAAE;UAC5C0D,UAAU,EAAGD,CAAC,IAAK;YACjB,IAAIA,CAAC,CAACE,GAAG,KAAK,OAAO,EAAE;cACrB1D,WAAW,CAAC,CAAC;cACbwD,CAAC,CAACG,cAAc,CAAC,CAAC;YACpB;UACF,CAAE;UACF5C,EAAE,EAAE;YACFpD,eAAe,EAAE,SAAS;YAC1BiG,KAAK,EAAE;cAAE5F,KAAK,EAAE;YAAO,CAAC;YACxB,YAAY,EAAE;cAAEyE,WAAW,EAAE;YAAO;UACtC;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF3E,OAAA,CAACX,MAAM;UAAC8E,OAAO,EAAC,WAAW;UAACnD,KAAK,EAAC,WAAW;UAACoE,OAAO,EAAEpC,WAAY;UAACe,EAAE,EAAE;YAAE6B,EAAE,EAAE;UAAE,CAAE;UAAA1B,QAAA,eAChFlE,OAAA,CAACrB,QAAQ;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CA3KID,IAAI;AAAAoF,GAAA,GAAJpF,IAAI;AA6KV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAqF,GAAA;AAAAC,YAAA,CAAAtF,EAAA;AAAAsF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}