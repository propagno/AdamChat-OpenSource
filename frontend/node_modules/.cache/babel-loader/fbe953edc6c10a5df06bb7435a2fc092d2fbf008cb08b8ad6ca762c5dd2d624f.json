{"ast":null,"code":"/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport { toString } from 'mdast-util-to-string';\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node);\n  return Boolean(!state.options.resourceLink &&\n  // If there’s a url…\n  node.url &&\n  // And there’s a no title…\n  !node.title &&\n  // And the content of `node` is a single text node…\n  node.children && node.children.length === 1 && node.children[0].type === 'text' && (\n  // And if the url is the same as the content…\n  raw === node.url || 'mailto:' + raw === node.url) &&\n  // And that starts w/ a protocol…\n  /^[a-z][a-z+.-]+:/i.test(node.url) &&\n  // And that doesn’t contain ASCII control codes (character escapes and\n  // references don’t work), space, or angle brackets…\n  !/[\\0- <>\\u007F]/.test(node.url));\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}