{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, Tabs, Tab, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\n// Dados de exemplo para Agents e GPTs\nconst agents = [{\n  id: 1,\n  name: 'Agent Alpha'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\n\n// Estilização para as mensagens\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  maxWidth: '80%',\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  var _gptProviders$find;\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [activeTab, setActiveTab] = useState(0); // 0 = Agents, 1 = GPTs\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n  const user_id = \"usuario_exemplo\"; // Substitua pelo identificador do usuário autenticado\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n\n    // Define o provider: se aba Agents, utiliza o nome do agente (convertido para minúsculo); se GPTs, utiliza a seleção do dropdown.\n    const provider = activeTab === 0 ? selectedAgent.name.toLowerCase() : selectedGpt;\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\n        user_id,\n        message,\n        provider\n      });\n      // Assume que o backend retorna o histórico completo da conversa\n      setHistory(response.data.history);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Op\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"GPTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"gpt-select-label\",\n            children: \"Selecione o GPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"gpt-select-label\",\n            value: selectedGpt,\n            label: \"Selecione o GPT\",\n            onChange: handleGptSelect,\n            children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: provider.id,\n              children: provider.name\n            }, provider.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", activeTab === 0 ? selectedAgent.name : (_gptProviders$find = gptProviders.find(g => g.id === selectedGpt)) === null || _gptProviders$find === void 0 ? void 0 : _gptProviders$find.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #ddd',\n          borderRadius: 2,\n          backgroundColor: '#fafafa',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Digite sua mensagem...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              sendMessage();\n              e.preventDefault();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: sendMessage,\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bow+DHZNbcQNcc+L50Ij06xE3rU=\");\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","SendIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","Tabs","Tab","FormControl","InputLabel","Select","MenuItem","styled","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","primary","main","grey","color","contrastText","text","maxWidth","alignSelf","marginBottom","borderRadius","_c","Chat","_s","_gptProviders$find","message","setMessage","history","setHistory","activeTab","setActiveTab","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","user_id","handleTabChange","event","newValue","handleAgentSelect","agent","handleGptSelect","target","value","sendMessage","trim","provider","toLowerCase","response","post","process","env","REACT_APP_BACKEND_URL","data","error","console","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","onChange","centered","label","map","disablePadding","selected","onClick","p","fullWidth","labelId","component","flexGrow","ml","flexDirection","mb","find","g","overflowY","border","entry","index","ref","placeholder","e","onKeyPress","key","preventDefault","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  Tabs,\r\n  Tab,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// Dados de exemplo para Agents e GPTs\r\nconst agents = [\r\n  { id: 1, name: 'Agent Alpha' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\n// Estilização para as mensagens\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[300],\r\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(0); // 0 = Agents, 1 = GPTs\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n  const user_id = \"usuario_exemplo\"; // Substitua pelo identificador do usuário autenticado\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    // Define o provider: se aba Agents, utiliza o nome do agente (convertido para minúsculo); se GPTs, utiliza a seleção do dropdown.\r\n    const provider = activeTab === 0 ? selectedAgent.name.toLowerCase() : selectedGpt;\r\n\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\r\n        user_id,\r\n        message,\r\n        provider,\r\n      });\r\n      // Assume que o backend retorna o histórico completo da conversa\r\n      setHistory(response.data.history);\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      {/* Barra lateral com abas */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Opções\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <Tabs value={activeTab} onChange={handleTabChange} centered>\r\n          <Tab label=\"Agents\" />\r\n          <Tab label=\"GPTs\" />\r\n        </Tabs>\r\n        <Divider />\r\n        {activeTab === 0 ? (\r\n          <List>\r\n            {agents.map((agent) => (\r\n              <ListItem key={agent.id} disablePadding>\r\n                <ListItemButton\r\n                  selected={selectedAgent.id === agent.id}\r\n                  onClick={() => handleAgentSelect(agent)}\r\n                >\r\n                  <ListItemText primary={agent.name} />\r\n                </ListItemButton>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Box sx={{ p: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"gpt-select-label\">Selecione o GPT</InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecione o GPT\"\r\n                onChange={handleGptSelect}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        )}\r\n      </Drawer>\r\n\r\n      {/* Área principal do chat, deslocada para a direita */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ flexGrow: 1, p: 3, ml: `${drawerWidth}px`, display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {activeTab === 0 ? selectedAgent.name : gptProviders.find(g => g.id === selectedGpt)?.name}\r\n        </Typography>\r\n        \r\n        {/* Histórico do Chat */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #ddd',\r\n            borderRadius: 2,\r\n            backgroundColor: '#fafafa',\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              <Typography variant=\"body1\">{entry.text}</Typography>\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n        \r\n        {/* Campo de Entrada e Botão */}\r\n        <Box sx={{ display: 'flex' }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Digite sua mensagem...\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                sendMessage();\r\n                e.preventDefault();\r\n              }\r\n            }}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n            <SendIcon />\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SACEC,GAAG,EACHC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,OAAO,EACPC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,IAAI,EACJC,GAAG,EACHC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAG,GAAG;;AAEvB;AACA,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAc,CAAC,EAC9B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAa,CAAC,EAC7B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAc,CAAC,CAC/B;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,EAClC;EAAED,EAAE,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,EAChC;EAAED,EAAE,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAY,CAAC,CACvC;;AAED;AACA,MAAME,aAAa,GAAGR,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC;EAAEiB,KAAK;EAAEC;AAAO,CAAC,MAAM;EAC1DC,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5BC,eAAe,EAAEH,MAAM,KAAK,MAAM,GAAGD,KAAK,CAACK,OAAO,CAACC,OAAO,CAACC,IAAI,GAAGP,KAAK,CAACK,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;EACzFC,KAAK,EAAER,MAAM,KAAK,MAAM,GAAGD,KAAK,CAACK,OAAO,CAACC,OAAO,CAACI,YAAY,GAAGV,KAAK,CAACK,OAAO,CAACM,IAAI,CAACL,OAAO;EAC1FM,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAEZ,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY;EACxDa,YAAY,EAAEd,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;EAC9BY,YAAY,EAAEf,KAAK,CAACG,OAAO,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;AAACa,EAAA,GAREjB,aAAa;AAUnB,MAAMkB,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsD,OAAO,EAAEC,UAAU,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC0D,aAAa,EAAEC,gBAAgB,CAAC,GAAG3D,QAAQ,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAG7D,QAAQ,CAAC8B,YAAY,CAAC,CAAC,CAAC,CAACF,EAAE,CAAC;EAClE,MAAMkC,UAAU,GAAG7D,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM8D,OAAO,GAAG,iBAAiB,CAAC,CAAC;;EAEnC,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC3CT,YAAY,CAACS,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,gBAAgB,CAACS,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAIJ,KAAK,IAAK;IACjCJ,cAAc,CAACI,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIpB,OAAO,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE3B;IACA,MAAMC,QAAQ,GAAGlB,SAAS,KAAK,CAAC,GAAGE,aAAa,CAAC7B,IAAI,CAAC8C,WAAW,CAAC,CAAC,GAAGf,WAAW;IAEjF,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMzE,KAAK,CAAC0E,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,OAAO,EAAE;QAC7EjB,OAAO;QACPX,OAAO;QACPsB;MACF,CAAC,CAAC;MACF;MACAnB,UAAU,CAACqB,QAAQ,CAACK,IAAI,CAAC3B,OAAO,CAAC;MACjCD,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDhF,SAAS,CAAC,MAAM;IACd,IAAI4D,UAAU,CAACsB,OAAO,EAAE;MACtBtB,UAAU,CAACsB,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE,CAAChC,OAAO,CAAC,CAAC;EAEb,oBACE7B,OAAA,CAACpB,GAAG;IAACkF,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE5CjE,OAAA,CAACnB,MAAM;MACLqF,OAAO,EAAC,WAAW;MACnBJ,EAAE,EAAE;QACFK,KAAK,EAAElE,WAAW;QAClBmE,UAAU,EAAE,CAAC;QACb,CAAC,oBAAoB,GAAG;UAAED,KAAK,EAAElE,WAAW;UAAEoE,SAAS,EAAE;QAAa;MACxE,CAAE;MAAAJ,QAAA,gBAEFjE,OAAA,CAACd,OAAO;QAAA+E,QAAA,eACNjE,OAAA,CAACb,UAAU;UAAC+E,OAAO,EAAC,IAAI;UAACI,MAAM;UAAAL,QAAA,EAAC;QAEhC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACV1E,OAAA,CAACT,OAAO;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX1E,OAAA,CAACR,IAAI;QAACsD,KAAK,EAAEf,SAAU;QAAC4C,QAAQ,EAAEpC,eAAgB;QAACqC,QAAQ;QAAAX,QAAA,gBACzDjE,OAAA,CAACP,GAAG;UAACoF,KAAK,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtB1E,OAAA,CAACP,GAAG;UAACoF,KAAK,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACP1E,OAAA,CAACT,OAAO;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACV3C,SAAS,KAAK,CAAC,gBACd/B,OAAA,CAAClB,IAAI;QAAAmF,QAAA,EACF/D,MAAM,CAAC4E,GAAG,CAAEnC,KAAK,iBAChB3C,OAAA,CAACjB,QAAQ;UAAgBgG,cAAc;UAAAd,QAAA,eACrCjE,OAAA,CAAChB,cAAc;YACbgG,QAAQ,EAAE/C,aAAa,CAAC9B,EAAE,KAAKwC,KAAK,CAACxC,EAAG;YACxC8E,OAAO,EAAEA,CAAA,KAAMvC,iBAAiB,CAACC,KAAK,CAAE;YAAAsB,QAAA,eAExCjE,OAAA,CAACf,YAAY;cAAC4B,OAAO,EAAE8B,KAAK,CAACvC;YAAK;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC,GANJ/B,KAAK,CAACxC,EAAE;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAEP1E,OAAA,CAACpB,GAAG;QAACkF,EAAE,EAAE;UAAEoB,CAAC,EAAE;QAAE,CAAE;QAAAjB,QAAA,eAChBjE,OAAA,CAACN,WAAW;UAACyF,SAAS;UAAAlB,QAAA,gBACpBjE,OAAA,CAACL,UAAU;YAACQ,EAAE,EAAC,kBAAkB;YAAA8D,QAAA,EAAC;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9D1E,OAAA,CAACJ,MAAM;YACLwF,OAAO,EAAC,kBAAkB;YAC1BtC,KAAK,EAAEX,WAAY;YACnB0C,KAAK,EAAC,iBAAiB;YACvBF,QAAQ,EAAE/B,eAAgB;YAAAqB,QAAA,EAEzB5D,YAAY,CAACyE,GAAG,CAAE7B,QAAQ,iBACzBjD,OAAA,CAACH,QAAQ;cAAmBiD,KAAK,EAAEG,QAAQ,CAAC9C,EAAG;cAAA8D,QAAA,EAC5ChB,QAAQ,CAAC7C;YAAI,GADD6C,QAAQ,CAAC9C,EAAE;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAGT1E,OAAA,CAACpB,GAAG;MACFyG,SAAS,EAAC,MAAM;MAChBvB,EAAE,EAAE;QAAEwB,QAAQ,EAAE,CAAC;QAAEJ,CAAC,EAAE,CAAC;QAAEK,EAAE,EAAE,GAAGtF,WAAW,IAAI;QAAE8D,OAAO,EAAE,MAAM;QAAEyB,aAAa,EAAE;MAAS,CAAE;MAAAvB,QAAA,gBAE5FjE,OAAA,CAACb,UAAU;QAAC+E,OAAO,EAAC,IAAI;QAACJ,EAAE,EAAE;UAAE2B,EAAE,EAAE;QAAE,CAAE;QAAAxB,QAAA,GAAC,WAC7B,EAAClC,SAAS,KAAK,CAAC,GAAGE,aAAa,CAAC7B,IAAI,IAAAsB,kBAAA,GAAGrB,YAAY,CAACqF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACxF,EAAE,KAAKgC,WAAW,CAAC,cAAAT,kBAAA,uBAA5CA,kBAAA,CAA8CtB,IAAI;MAAA;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC,eAGb1E,OAAA,CAACpB,GAAG;QACFkF,EAAE,EAAE;UACFwB,QAAQ,EAAE,CAAC;UACXM,SAAS,EAAE,MAAM;UACjBH,EAAE,EAAE,CAAC;UACLP,CAAC,EAAE,CAAC;UACJW,MAAM,EAAE,gBAAgB;UACxBvE,YAAY,EAAE,CAAC;UACfX,eAAe,EAAE,SAAS;UAC1BoD,OAAO,EAAE,MAAM;UACfyB,aAAa,EAAE;QACjB,CAAE;QAAAvB,QAAA,GAEDpC,OAAO,CAACiD,GAAG,CAAC,CAACgB,KAAK,EAAEC,KAAK,kBACxB/F,OAAA,CAACM,aAAa;UAAaE,MAAM,EAAEsF,KAAK,CAACtF,MAAO;UAAAyD,QAAA,eAC9CjE,OAAA,CAACb,UAAU;YAAC+E,OAAO,EAAC,OAAO;YAAAD,QAAA,EAAE6B,KAAK,CAAC5E;UAAI;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC,GADnCqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAChB,CAAC,eACF1E,OAAA;UAAKgG,GAAG,EAAE3D;QAAW;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAGN1E,OAAA,CAACpB,GAAG;QAACkF,EAAE,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAAAE,QAAA,gBAC3BjE,OAAA,CAACZ,SAAS;UACR+F,SAAS;UACTjB,OAAO,EAAC,UAAU;UAClB+B,WAAW,EAAC,wBAAwB;UACpCnD,KAAK,EAAEnB,OAAQ;UACfgD,QAAQ,EAAGuB,CAAC,IAAKtE,UAAU,CAACsE,CAAC,CAACrD,MAAM,CAACC,KAAK,CAAE;UAC5CqD,UAAU,EAAGD,CAAC,IAAK;YACjB,IAAIA,CAAC,CAACE,GAAG,KAAK,OAAO,EAAE;cACrBrD,WAAW,CAAC,CAAC;cACbmD,CAAC,CAACG,cAAc,CAAC,CAAC;YACpB;UACF;QAAE;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF1E,OAAA,CAACX,MAAM;UAAC6E,OAAO,EAAC,WAAW;UAAClD,KAAK,EAAC,SAAS;UAACiE,OAAO,EAAElC,WAAY;UAACe,EAAE,EAAE;YAAEyB,EAAE,EAAE;UAAE,CAAE;UAAAtB,QAAA,eAC9EjE,OAAA,CAACrB,QAAQ;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CA5JID,IAAI;AAAA8E,GAAA,GAAJ9E,IAAI;AA8JV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAA+E,GAAA;AAAAC,YAAA,CAAAhF,EAAA;AAAAgF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}