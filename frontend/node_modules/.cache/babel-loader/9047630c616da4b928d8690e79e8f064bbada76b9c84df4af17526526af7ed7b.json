{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport SendIcon from '@mui/icons-material/Send';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, FormControl, InputLabel, Select, MenuItem, IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useKeycloak } from '@react-keycloak/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst agents = [{\n  id: 1,\n  name: 'Agent Médico'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  position: 'relative',\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\n  maxWidth: '80%',\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2),\n  transition: 'border 0.2s ease-in-out',\n  '&:hover': {\n    border: sender === \"ai\" ? '1px solid #888' : '1px solid #1976d2'\n  }\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n\n  // Estados para modal de edição (opcional)\n  const [editOpen, setEditOpen] = useState(false);\n  const [editText, setEditText] = useState(\"\");\n  const [editMsgIndex, setEditMsgIndex] = useState(null);\n\n  // Estados para exibir o tempo de resposta\n  const [isWaitingResponse, setIsWaitingResponse] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const timerRef = useRef(null);\n\n  // Extraia os dados do usuário do token do Keycloak\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n\n  // Função para enviar uma nova mensagem\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = isMedical ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical` : `${process.env.REACT_APP_BACKEND_URL}/chat`;\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    } : {\n      user_id,\n      user_email,\n      message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n\n    // Limpa o campo de texto imediatamente\n    setMessage(\"\");\n\n    // Inicia o timer para exibir o tempo de resposta\n    setIsWaitingResponse(true);\n    setElapsedTime(0);\n    const startTime = Date.now();\n    timerRef.current = setInterval(() => {\n      const now = Date.now();\n      const diffInSeconds = Math.floor((now - startTime) / 1000);\n      setElapsedTime(diffInSeconds);\n    }, 1000);\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    } finally {\n      setIsWaitingResponse(false);\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n  };\n\n  // Funções para Re-run e Editar\n  const handleRerun = index => {\n    // Localiza a mensagem do usuário associada à resposta da AI pelo campo \"parentId\"\n    const aiMsg = history[index];\n    if (!aiMsg || !aiMsg.parentId) return;\n    const userMsg = history.find(msg => msg.id === aiMsg.parentId);\n    if (userMsg) {\n      sendRerunMessage(userMsg.text);\n    }\n  };\n  const sendRerunMessage = async text => {\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = isMedical ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical` : `${process.env.REACT_APP_BACKEND_URL}/chat`;\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: text,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    } : {\n      user_id,\n      user_email,\n      message: text,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n    } catch (error) {\n      console.error(\"Erro ao re-run mensagem:\", error);\n    }\n  };\n  const handleEdit = index => {\n    const aiMsg = history[index];\n    if (!aiMsg || !aiMsg.parentId) return;\n    const userMsg = history.find(msg => msg.id === aiMsg.parentId);\n    if (!userMsg) return;\n    setEditText(userMsg.text);\n    setEditMsgIndex(index);\n    setEditOpen(true);\n  };\n  const handleEditConfirm = () => {\n    if (editText.trim() === \"\") return;\n    sendRerunMessage(editText);\n    setEditOpen(false);\n    setEditText(\"\");\n    setEditMsgIndex(null);\n  };\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setEditText(\"\");\n    setEditMsgIndex(null);\n  };\n  const handleDelete = index => {\n    setHistory(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    console.log(\"Texto copiado:\", text);\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", selectedAgent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), isWaitingResponse && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Aguarde... (Tempo de resposta: \", elapsedTime, \"s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: [entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: -16,\n              // Ajuste esse valor para posicionar os ícones acima do conteúdo\n              right: 8,\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleEdit(index),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRerun(index),\n              children: /*#__PURE__*/_jsxDEV(ReplayIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDelete(index),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleCopy(entry.text),\n              children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            remarkPlugins: [remarkGfm],\n            components: {\n              h1: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 23\n              }, this),\n              h2: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this),\n              p: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this),\n              ul: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"ul\",\n                sx: {\n                  pl: 4,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this),\n              li: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"li\",\n                sx: {\n                  mb: 0.5\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this)\n            },\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              display: 'block',\n              marginTop: 0.5\n            },\n            children: [\"Agent: \", entry.agent, \" | GPT: \", entry.gpt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Digite sua mensagem...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                sendMessage();\n                e.preventDefault();\n              }\n            },\n            sx: {\n              backgroundColor: '#1e1e1e',\n              input: {\n                color: '#fff'\n              },\n              '& fieldset': {\n                borderColor: '#333'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: sendMessage,\n            sx: {\n              ml: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gpt-select-label\",\n              sx: {\n                color: \"#fff\"\n              },\n              children: \"Selecionar GPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gpt-select-label\",\n              value: selectedGpt,\n              label: \"Selecionar GPT\",\n              onChange: handleGptSelect,\n              sx: {\n                color: \"#fff\",\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '& .MuiSvgIcon-root': {\n                  color: \"#fff\"\n                }\n              },\n              children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: provider.id,\n                children: provider.name\n              }, provider.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editOpen,\n      onClose: handleEditClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Editar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          value: editText,\n          onChange: e => setEditText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleEditConfirm,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"vT8AqPmUSapbYUEHxoGxEDzxTa4=\", false, function () {\n  return [useKeycloak];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","remarkGfm","SendIcon","EditIcon","ReplayIcon","DeleteIcon","ContentCopyIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","FormControl","InputLabel","Select","MenuItem","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","styled","useKeycloak","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","position","padding","spacing","backgroundColor","palette","grey","primary","main","color","common","white","contrastText","maxWidth","alignSelf","marginBottom","borderRadius","transition","border","_c","Chat","_s","keycloak","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","editOpen","setEditOpen","editText","setEditText","editMsgIndex","setEditMsgIndex","isWaitingResponse","setIsWaitingResponse","elapsedTime","setElapsedTime","timerRef","user_id","tokenParsed","sub","user_email","email","handleAgentSelect","agent","handleGptSelect","event","target","value","sendMessage","trim","isMedical","toLowerCase","endpoint","process","env","REACT_APP_BACKEND_URL","payload","consultation_data","gptProvider","startTime","Date","now","current","setInterval","diffInSeconds","Math","floor","response","post","data","error","console","clearInterval","handleRerun","index","aiMsg","parentId","userMsg","find","msg","sendRerunMessage","text","handleEdit","handleEditConfirm","handleEditClose","handleDelete","prev","filter","_","i","handleCopy","navigator","clipboard","writeText","log","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","entry","top","right","gap","size","fontSize","remarkPlugins","components","h1","node","props","fontWeight","mt","h2","ul","pl","li","marginTop","gpt","ref","fullWidth","placeholder","onChange","e","onKeyPress","key","preventDefault","input","borderColor","labelId","label","provider","open","onClose","multiline","rows","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Médico' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  position: 'relative',\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\r\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n  transition: 'border 0.2s ease-in-out',\r\n  '&:hover': {\r\n    border: sender === \"ai\" ? '1px solid #888' : '1px solid #1976d2',\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const { keycloak } = useKeycloak();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Estados para modal de edição (opcional)\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editMsgIndex, setEditMsgIndex] = useState(null);\r\n\r\n  // Estados para exibir o tempo de resposta\r\n  const [isWaitingResponse, setIsWaitingResponse] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const timerRef = useRef(null);\r\n\r\n  // Extraia os dados do usuário do token do Keycloak\r\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\r\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  // Função para enviar uma nova mensagem\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = isMedical\r\n      ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical`\r\n      : `${process.env.REACT_APP_BACKEND_URL}/chat`;\r\n\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        };\r\n\r\n    // Limpa o campo de texto imediatamente\r\n    setMessage(\"\");\r\n\r\n    // Inicia o timer para exibir o tempo de resposta\r\n    setIsWaitingResponse(true);\r\n    setElapsedTime(0);\r\n    const startTime = Date.now();\r\n    timerRef.current = setInterval(() => {\r\n      const now = Date.now();\r\n      const diffInSeconds = Math.floor((now - startTime) / 1000);\r\n      setElapsedTime(diffInSeconds);\r\n    }, 1000);\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    } finally {\r\n      setIsWaitingResponse(false);\r\n      clearInterval(timerRef.current);\r\n      timerRef.current = null;\r\n    }\r\n  };\r\n\r\n  // Funções para Re-run e Editar\r\n  const handleRerun = (index) => {\r\n    // Localiza a mensagem do usuário associada à resposta da AI pelo campo \"parentId\"\r\n    const aiMsg = history[index];\r\n    if (!aiMsg || !aiMsg.parentId) return;\r\n    const userMsg = history.find((msg) => msg.id === aiMsg.parentId);\r\n    if (userMsg) {\r\n      sendRerunMessage(userMsg.text);\r\n    }\r\n  };\r\n\r\n  const sendRerunMessage = async (text) => {\r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = isMedical\r\n      ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical`\r\n      : `${process.env.REACT_APP_BACKEND_URL}/chat`;\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: text,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message: text,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        };\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error(\"Erro ao re-run mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const aiMsg = history[index];\r\n    if (!aiMsg || !aiMsg.parentId) return;\r\n    const userMsg = history.find((msg) => msg.id === aiMsg.parentId);\r\n    if (!userMsg) return;\r\n    setEditText(userMsg.text);\r\n    setEditMsgIndex(index);\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    if (editText.trim() === \"\") return;\r\n    sendRerunMessage(editText);\r\n    setEditOpen(false);\r\n    setEditText(\"\");\r\n    setEditMsgIndex(null);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n    setEditText(\"\");\r\n    setEditMsgIndex(null);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    setHistory(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n    console.log(\"Texto copiado:\", text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212', color: '#fff' }}>\r\n      {/* Barra lateral para Agents */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n            backgroundColor: '#1e1e1e',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agents\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Área principal do chat */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: `${drawerWidth}px`,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#121212',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {selectedAgent.name}\r\n        </Typography>\r\n\r\n        {isWaitingResponse && (\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            Aguarde... (Tempo de resposta: {elapsedTime}s)\r\n          </Typography>\r\n        )}\r\n\r\n        {/* Histórico de mensagens */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              {entry.sender === \"ai\" && (\r\n                <Box\r\n                  sx={{\r\n                    position: 'absolute',\r\n                    top: -16, // Ajuste esse valor para posicionar os ícones acima do conteúdo\r\n                    right: 8,\r\n                    display: 'flex',\r\n                    gap: 1,\r\n                  }}\r\n                >\r\n                  <IconButton size=\"small\" onClick={() => handleEdit(index)}>\r\n                    <EditIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleRerun(index)}>\r\n                    <ReplayIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleDelete(index)}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleCopy(entry.text)}>\r\n                    <ContentCopyIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Box>\r\n              )}\r\n              {entry.sender === \"ai\" ? (\r\n                <ReactMarkdown\r\n                  remarkPlugins={[remarkGfm]}\r\n                  components={{\r\n                    h1: ({ node, ...props }) => (\r\n                      <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    h2: ({ node, ...props }) => (\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    p: ({ node, ...props }) => (\r\n                      <Typography variant=\"body1\" sx={{ mb: 1 }} {...props} />\r\n                    ),\r\n                    ul: ({ node, ...props }) => (\r\n                      <Box component=\"ul\" sx={{ pl: 4, mb: 1 }} {...props} />\r\n                    ),\r\n                    li: ({ node, ...props }) => (\r\n                      <Box component=\"li\" sx={{ mb: 0.5 }} {...props} />\r\n                    ),\r\n                  }}\r\n                >\r\n                  {entry.text}\r\n                </ReactMarkdown>\r\n              ) : (\r\n                <Typography variant=\"body1\">{entry.text}</Typography>\r\n              )}\r\n              {entry.sender === \"ai\" && (\r\n                <Typography variant=\"caption\" sx={{ display: 'block', marginTop: 0.5 }}>\r\n                  Agent: {entry.agent} | GPT: {entry.gpt}\r\n                </Typography>\r\n              )}\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n\r\n        {/* Campo de entrada, botão e dropdown para selecionar o GPT */}\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ display: 'flex', mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  sendMessage();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              sx={{\r\n                backgroundColor: '#1e1e1e',\r\n                input: { color: '#fff' },\r\n                '& fieldset': { borderColor: '#333' },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n              <SendIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>\r\n                Selecionar GPT\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecionar GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Modal de Edição */}\r\n      <Dialog open={editOpen} onClose={handleEditClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Editar Mensagem</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            value={editText}\r\n            onChange={(e) => setEditText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditClose}>Cancelar</Button>\r\n          <Button variant=\"contained\" onClick={handleEditConfirm}>Confirmar</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}