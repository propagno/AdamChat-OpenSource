{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport SendIcon from '@mui/icons-material/Send';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useKeycloak } from '@react-keycloak/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst agents = [{\n  id: 1,\n  name: 'Agent Médico'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\n\n// Estilização do \"balão\" de mensagem\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\n  maxWidth: '80%',\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n\n  // Identificadores do usuário (via Keycloak)\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n\n    // Verifica se é o Agent Médico\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = isMedical ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical` : `${process.env.REACT_APP_BACKEND_URL}/chat`;\n\n    // Ajusta o payload para cada caso\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt // Podemos enviar o GPT mesmo para o agent médico\n    } : {\n      user_id,\n      user_email,\n      message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", selectedAgent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: [entry.sender === \"ai\" ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            remarkPlugins: [remarkGfm]\n            // Sobrescrevendo elementos markdown para usar componentes MUI\n            ,\n            components: {\n              h1: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this),\n              h2: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this),\n              h3: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this),\n              p: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this),\n              ul: ({\n                node,\n                ordered,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"ul\",\n                sx: {\n                  pl: 4,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this),\n              ol: ({\n                node,\n                ordered,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"ol\",\n                sx: {\n                  pl: 4,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this),\n              li: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"li\",\n                sx: {\n                  mb: 0.5\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this),\n              strong: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"strong\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this)\n            },\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              display: 'block',\n              marginTop: 0.5\n            },\n            children: [\"Agent: \", entry.agent, \" | GPT: \", entry.gpt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Digite sua mensagem...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                sendMessage();\n                e.preventDefault();\n              }\n            },\n            sx: {\n              backgroundColor: '#1e1e1e',\n              input: {\n                color: '#fff'\n              },\n              '& fieldset': {\n                borderColor: '#333'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: sendMessage,\n            sx: {\n              ml: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gpt-select-label\",\n              sx: {\n                color: \"#fff\"\n              },\n              children: \"Selecionar GPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gpt-select-label\",\n              value: selectedGpt,\n              label: \"Selecionar GPT\",\n              onChange: handleGptSelect,\n              sx: {\n                color: \"#fff\",\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '& .MuiSvgIcon-root': {\n                  color: \"#fff\"\n                }\n              },\n              children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: provider.id,\n                children: provider.name\n              }, provider.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Co4U7V/uFPuJH2Df0qBddQKl4cQ=\", false, function () {\n  return [useKeycloak];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","SendIcon","ReactMarkdown","remarkGfm","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","FormControl","InputLabel","Select","MenuItem","styled","useKeycloak","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","grey","primary","main","color","common","white","contrastText","maxWidth","alignSelf","marginBottom","borderRadius","_c","Chat","_s","keycloak","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","user_id","tokenParsed","sub","user_email","email","handleAgentSelect","agent","handleGptSelect","event","target","value","sendMessage","trim","isMedical","toLowerCase","endpoint","process","env","REACT_APP_BACKEND_URL","payload","consultation_data","gptProvider","response","post","data","error","console","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","border","entry","index","remarkPlugins","components","h1","node","props","fontWeight","mt","h2","h3","ul","ordered","pl","ol","li","strong","text","marginTop","gpt","ref","fullWidth","placeholder","onChange","e","onKeyPress","key","preventDefault","input","borderColor","size","labelId","label","provider","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Médico' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\n// Estilização do \"balão\" de mensagem\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\r\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst Chat = () => {\r\n  const { keycloak } = useKeycloak();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Identificadores do usuário (via Keycloak)\r\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\r\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    // Verifica se é o Agent Médico\r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = isMedical\r\n      ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical`\r\n      : `${process.env.REACT_APP_BACKEND_URL}/chat`;\r\n\r\n    // Ajusta o payload para cada caso\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt, // Podemos enviar o GPT mesmo para o agent médico\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message,\r\n          agent: selectedAgent.name.toLowerCase(),\r\n          gptProvider: selectedGpt,\r\n        };\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212', color: '#fff' }}>\r\n      {/* Barra lateral para seleção de Agents */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n            backgroundColor: '#1e1e1e',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agents\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Área principal do Chat */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: `${drawerWidth}px`,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#121212',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {selectedAgent.name}\r\n        </Typography>\r\n\r\n        {/* Histórico de mensagens */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              {entry.sender === \"ai\" ? (\r\n                <ReactMarkdown\r\n                  remarkPlugins={[remarkGfm]}\r\n                  // Sobrescrevendo elementos markdown para usar componentes MUI\r\n                  components={{\r\n                    h1: ({node, ...props}) => (\r\n                      <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    h2: ({node, ...props}) => (\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    h3: ({node, ...props}) => (\r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    p: ({node, ...props}) => (\r\n                      <Typography variant=\"body1\" sx={{ mb: 1 }} {...props} />\r\n                    ),\r\n                    ul: ({node, ordered, ...props}) => (\r\n                      <Box component=\"ul\" sx={{ pl: 4, mb: 1 }} {...props} />\r\n                    ),\r\n                    ol: ({node, ordered, ...props}) => (\r\n                      <Box component=\"ol\" sx={{ pl: 4, mb: 1 }} {...props} />\r\n                    ),\r\n                    li: ({node, ...props}) => (\r\n                      <Box component=\"li\" sx={{ mb: 0.5 }} {...props} />\r\n                    ),\r\n                    strong: ({node, ...props}) => (\r\n                      <Box component=\"strong\" sx={{ fontWeight: 'bold' }} {...props} />\r\n                    ),\r\n                  }}\r\n                >\r\n                  {entry.text}\r\n                </ReactMarkdown>\r\n              ) : (\r\n                <Typography variant=\"body1\">{entry.text}</Typography>\r\n              )}\r\n              {entry.sender === \"ai\" && (\r\n                <Typography variant=\"caption\" sx={{ display: 'block', marginTop: 0.5 }}>\r\n                  Agent: {entry.agent} | GPT: {entry.gpt}\r\n                </Typography>\r\n              )}\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n\r\n        {/* Campo de entrada + botão + dropdown GPT */}\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ display: 'flex', mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  sendMessage();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              sx={{\r\n                backgroundColor: '#1e1e1e',\r\n                input: { color: '#fff' },\r\n                '& fieldset': { borderColor: '#333' },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n              <SendIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>\r\n                Selecionar GPT\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecionar GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}