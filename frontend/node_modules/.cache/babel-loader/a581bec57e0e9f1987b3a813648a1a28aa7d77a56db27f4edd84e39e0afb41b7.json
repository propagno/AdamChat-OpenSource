{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport SendIcon from '@mui/icons-material/Send';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, FormControl, InputLabel, Select, MenuItem, IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useKeycloak } from '@react-keycloak/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst agents = [{\n  id: 1,\n  name: 'Agent Médico'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  position: 'relative',\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\n  maxWidth: '80%',\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2),\n  transition: 'border 0.2s ease-in-out',\n  '&:hover': {\n    border: sender === \"ai\" ? '1px solid #888' : '1px solid #1976d2'\n  }\n}));\n_c = MessageBubble;\nfunction generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\nconst Chat = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const chatEndRef = useRef(null);\n\n  // Edit Modal States\n  const [editOpen, setEditOpen] = useState(false);\n  const [editText, setEditText] = useState(\"\");\n  const [editUserMsgId, setEditUserMsgId] = useState(null); // ID da mensagem de usuário que estamos editando\n\n  // Identificadores do usuário (via Keycloak)\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n\n  // Funções de ação nos botões\n  const handleEdit = aiMsgIndex => {\n    // Encontra a mensagem da AI\n    const aiMsg = history[aiMsgIndex];\n    if (!aiMsg) return;\n\n    // Localiza a mensagem de usuário que gerou essa AI (via parentId)\n    const userMsgIndex = history.findIndex(m => m.id === aiMsg.parentId);\n    if (userMsgIndex === -1) return;\n    const userMsg = history[userMsgIndex];\n    // Abre modal de edição\n    setEditText(userMsg.text);\n    setEditUserMsgId(userMsg.id);\n    setEditOpen(true);\n  };\n  const handleRerun = aiMsgIndex => {\n    // Localiza a mensagem de AI\n    const aiMsg = history[aiMsgIndex];\n    if (!aiMsg) return;\n\n    // Localiza a mensagem de usuário que gerou essa AI\n    const userMsgIndex = history.findIndex(m => m.id === aiMsg.parentId);\n    if (userMsgIndex === -1) return;\n    const userMsg = history[userMsgIndex];\n    // Reenviar esse userMsg.text\n    rerunMessage(userMsg);\n  };\n  const handleDelete = aiMsgIndex => {\n    // Exclui a mensagem da AI\n    setHistory(prev => prev.filter((_, i) => i !== aiMsgIndex));\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n    console.log(\"Texto copiado:\", text);\n  };\n\n  // Fecha modal de edição\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setEditUserMsgId(null);\n    setEditText(\"\");\n  };\n\n  // Confirma a edição -> re-run com o texto editado\n  const handleEditConfirm = () => {\n    if (!editUserMsgId) return;\n    // Localiza a mensagem do usuário no history\n    const userMsgIndex = history.findIndex(m => m.id === editUserMsgId);\n    if (userMsgIndex === -1) return;\n    const oldUserMsg = history[userMsgIndex];\n    const updatedUserMsg = {\n      ...oldUserMsg,\n      text: editText // atualiza o texto\n    };\n    handleEditClose();\n    rerunMessage(updatedUserMsg);\n  };\n\n  // Lógica para re-run (ou run) de uma mensagem de usuário\n  const rerunMessage = async userMsg => {\n    // Verifica se é Agent Médico\n    const isMedical = userMsg.agent === \"agent médico\";\n    const endpoint = isMedical ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical` : `${process.env.REACT_APP_BACKEND_URL}/chat`;\n    const payload = isMedical ? {\n      user_id,\n      user_email,\n      consultation_data: userMsg.text,\n      agent: userMsg.agent,\n      gptProvider: userMsg.gptProvider\n    } : {\n      user_id,\n      user_email,\n      message: userMsg.text,\n      agent: userMsg.agent,\n      gptProvider: userMsg.gptProvider\n    };\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(response.data.history);\n    } catch (error) {\n      console.error(\"Erro ao re-run mensagem:\", error);\n    }\n  };\n\n  // Envia mensagem do usuário (nova)\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\n    const endpoint = isMedical ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical` : `${process.env.REACT_APP_BACKEND_URL}/chat`;\n\n    // Cria objeto da mensagem de usuário\n    const userMsgId = generateId();\n    const userMsg = {\n      id: userMsgId,\n      sender: user_email,\n      text: message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n    try {\n      // Chamada ao backend\n      const payload = isMedical ? {\n        user_id,\n        user_email,\n        consultation_data: message,\n        agent: userMsg.agent,\n        gptProvider: userMsg.gptProvider\n      } : {\n        user_id,\n        user_email,\n        message,\n        agent: userMsg.agent,\n        gptProvider: userMsg.gptProvider\n      };\n      const response = await axios.post(endpoint, payload);\n\n      // O backend retorna um history completo; assumindo que ele gera a AI message\n      // e a relaciona com userMsgId via \"parentId\"\n      setHistory(response.data.history);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", selectedAgent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: [entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleEdit(index),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRerun(index),\n              children: /*#__PURE__*/_jsxDEV(ReplayIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDelete(index),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleCopy(entry.text),\n              children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            remarkPlugins: [remarkGfm],\n            components: {\n              h1: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this),\n              h2: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold',\n                  mt: 2,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this),\n              p: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this),\n              ul: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"ul\",\n                sx: {\n                  pl: 4,\n                  mb: 1\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this),\n              li: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(Box, {\n                component: \"li\",\n                sx: {\n                  mb: 0.5\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)\n            },\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), entry.sender === \"ai\" && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              display: 'block',\n              marginTop: 0.5\n            },\n            children: [\"Agent: \", entry.agent, \" | GPT: \", entry.gpt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Digite sua mensagem...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                sendMessage();\n                e.preventDefault();\n              }\n            },\n            sx: {\n              backgroundColor: '#1e1e1e',\n              input: {\n                color: '#fff'\n              },\n              '& fieldset': {\n                borderColor: '#333'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: sendMessage,\n            sx: {\n              ml: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gpt-select-label\",\n              sx: {\n                color: \"#fff\"\n              },\n              children: \"Selecionar GPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gpt-select-label\",\n              value: selectedGpt,\n              label: \"Selecionar GPT\",\n              onChange: handleGptSelect,\n              sx: {\n                color: \"#fff\",\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '& .MuiSvgIcon-root': {\n                  color: \"#fff\"\n                }\n              },\n              children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: provider.id,\n                children: provider.name\n              }, provider.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editOpen,\n      onClose: handleEditClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Editar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          value: editText,\n          onChange: e => setEditText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleEditConfirm,\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"qQ82FZB9bXRLvO03bP4Asb5Di9U=\", false, function () {\n  return [useKeycloak];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","remarkGfm","SendIcon","EditIcon","ReplayIcon","DeleteIcon","ContentCopyIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","FormControl","InputLabel","Select","MenuItem","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","styled","useKeycloak","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","position","padding","spacing","backgroundColor","palette","grey","primary","main","color","common","white","contrastText","maxWidth","alignSelf","marginBottom","borderRadius","transition","border","_c","generateId","Math","random","toString","substr","Chat","_s","keycloak","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","chatEndRef","editOpen","setEditOpen","editText","setEditText","editUserMsgId","setEditUserMsgId","user_id","tokenParsed","sub","user_email","email","handleAgentSelect","agent","handleGptSelect","event","target","value","handleEdit","aiMsgIndex","aiMsg","userMsgIndex","findIndex","m","parentId","userMsg","text","handleRerun","rerunMessage","handleDelete","prev","filter","_","i","handleCopy","navigator","clipboard","writeText","console","log","handleEditClose","handleEditConfirm","oldUserMsg","updatedUserMsg","isMedical","endpoint","process","env","REACT_APP_BACKEND_URL","payload","consultation_data","gptProvider","response","post","data","error","sendMessage","trim","toLowerCase","userMsgId","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","entry","index","top","right","gap","size","fontSize","remarkPlugins","components","h1","node","props","fontWeight","mt","h2","ul","pl","li","marginTop","gpt","ref","fullWidth","placeholder","onChange","e","onKeyPress","key","preventDefault","input","borderColor","labelId","label","provider","open","onClose","multiline","rows","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\n\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Médico' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  position: 'relative',\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === \"ai\" ? theme.palette.grey[800] : theme.palette.primary.main,\r\n  color: sender === \"ai\" ? theme.palette.common.white : theme.palette.primary.contrastText,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === \"ai\" ? 'flex-start' : 'flex-end',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n  transition: 'border 0.2s ease-in-out',\r\n  '&:hover': {\r\n    border: sender === \"ai\" ? '1px solid #888' : '1px solid #1976d2',\r\n  },\r\n}));\r\n\r\nfunction generateId() {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nconst Chat = () => {\r\n  const { keycloak } = useKeycloak();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const chatEndRef = useRef(null);\r\n\r\n  // Edit Modal States\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editUserMsgId, setEditUserMsgId] = useState(null); // ID da mensagem de usuário que estamos editando\r\n\r\n  // Identificadores do usuário (via Keycloak)\r\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\r\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  // Funções de ação nos botões\r\n  const handleEdit = (aiMsgIndex) => {\r\n    // Encontra a mensagem da AI\r\n    const aiMsg = history[aiMsgIndex];\r\n    if (!aiMsg) return;\r\n\r\n    // Localiza a mensagem de usuário que gerou essa AI (via parentId)\r\n    const userMsgIndex = history.findIndex(m => m.id === aiMsg.parentId);\r\n    if (userMsgIndex === -1) return;\r\n\r\n    const userMsg = history[userMsgIndex];\r\n    // Abre modal de edição\r\n    setEditText(userMsg.text);\r\n    setEditUserMsgId(userMsg.id);\r\n    setEditOpen(true);\r\n  };\r\n\r\n  const handleRerun = (aiMsgIndex) => {\r\n    // Localiza a mensagem de AI\r\n    const aiMsg = history[aiMsgIndex];\r\n    if (!aiMsg) return;\r\n\r\n    // Localiza a mensagem de usuário que gerou essa AI\r\n    const userMsgIndex = history.findIndex(m => m.id === aiMsg.parentId);\r\n    if (userMsgIndex === -1) return;\r\n\r\n    const userMsg = history[userMsgIndex];\r\n    // Reenviar esse userMsg.text\r\n    rerunMessage(userMsg);\r\n  };\r\n\r\n  const handleDelete = (aiMsgIndex) => {\r\n    // Exclui a mensagem da AI\r\n    setHistory(prev => prev.filter((_, i) => i !== aiMsgIndex));\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n    console.log(\"Texto copiado:\", text);\r\n  };\r\n\r\n  // Fecha modal de edição\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n    setEditUserMsgId(null);\r\n    setEditText(\"\");\r\n  };\r\n\r\n  // Confirma a edição -> re-run com o texto editado\r\n  const handleEditConfirm = () => {\r\n    if (!editUserMsgId) return;\r\n    // Localiza a mensagem do usuário no history\r\n    const userMsgIndex = history.findIndex(m => m.id === editUserMsgId);\r\n    if (userMsgIndex === -1) return;\r\n\r\n    const oldUserMsg = history[userMsgIndex];\r\n    const updatedUserMsg = {\r\n      ...oldUserMsg,\r\n      text: editText, // atualiza o texto\r\n    };\r\n\r\n    handleEditClose();\r\n    rerunMessage(updatedUserMsg);\r\n  };\r\n\r\n  // Lógica para re-run (ou run) de uma mensagem de usuário\r\n  const rerunMessage = async (userMsg) => {\r\n    // Verifica se é Agent Médico\r\n    const isMedical = userMsg.agent === \"agent médico\";\r\n    const endpoint = isMedical\r\n      ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical`\r\n      : `${process.env.REACT_APP_BACKEND_URL}/chat`;\r\n\r\n    const payload = isMedical\r\n      ? {\r\n          user_id,\r\n          user_email,\r\n          consultation_data: userMsg.text,\r\n          agent: userMsg.agent,\r\n          gptProvider: userMsg.gptProvider,\r\n        }\r\n      : {\r\n          user_id,\r\n          user_email,\r\n          message: userMsg.text,\r\n          agent: userMsg.agent,\r\n          gptProvider: userMsg.gptProvider,\r\n        };\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(response.data.history);\r\n    } catch (error) {\r\n      console.error(\"Erro ao re-run mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  // Envia mensagem do usuário (nova)\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    const isMedical = selectedAgent.name.toLowerCase() === \"agent médico\";\r\n    const endpoint = isMedical\r\n      ? `${process.env.REACT_APP_BACKEND_URL}/agent/medical`\r\n      : `${process.env.REACT_APP_BACKEND_URL}/chat`;\r\n\r\n    // Cria objeto da mensagem de usuário\r\n    const userMsgId = generateId();\r\n    const userMsg = {\r\n      id: userMsgId,\r\n      sender: user_email,\r\n      text: message,\r\n      agent: selectedAgent.name.toLowerCase(),\r\n      gptProvider: selectedGpt,\r\n    };\r\n\r\n    try {\r\n      // Chamada ao backend\r\n      const payload = isMedical\r\n        ? {\r\n            user_id,\r\n            user_email,\r\n            consultation_data: message,\r\n            agent: userMsg.agent,\r\n            gptProvider: userMsg.gptProvider,\r\n          }\r\n        : {\r\n            user_id,\r\n            user_email,\r\n            message,\r\n            agent: userMsg.agent,\r\n            gptProvider: userMsg.gptProvider,\r\n          };\r\n\r\n      const response = await axios.post(endpoint, payload);\r\n\r\n      // O backend retorna um history completo; assumindo que ele gera a AI message\r\n      // e a relaciona com userMsgId via \"parentId\"\r\n      setHistory(response.data.history);\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212', color: '#fff' }}>\r\n      {/* Drawer lateral */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n            backgroundColor: '#1e1e1e',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agents\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Conteúdo principal */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: `${drawerWidth}px`,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#121212',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {selectedAgent.name}\r\n        </Typography>\r\n\r\n        {/* Histórico */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              {/* Botões de ação no canto superior direito se for mensagem da AI */}\r\n              {entry.sender === \"ai\" && (\r\n                <Box\r\n                  sx={{\r\n                    position: 'absolute',\r\n                    top: 8,\r\n                    right: 8,\r\n                    display: 'flex',\r\n                    gap: 1,\r\n                  }}\r\n                >\r\n                  <IconButton size=\"small\" onClick={() => handleEdit(index)}>\r\n                    <EditIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleRerun(index)}>\r\n                    <ReplayIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleDelete(index)}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                  <IconButton size=\"small\" onClick={() => handleCopy(entry.text)}>\r\n                    <ContentCopyIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Box>\r\n              )}\r\n\r\n              {entry.sender === \"ai\" ? (\r\n                <ReactMarkdown\r\n                  remarkPlugins={[remarkGfm]}\r\n                  components={{\r\n                    h1: ({node, ...props}) => (\r\n                      <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    h2: ({node, ...props}) => (\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mt: 2, mb: 1 }} {...props} />\r\n                    ),\r\n                    p: ({node, ...props}) => (\r\n                      <Typography variant=\"body1\" sx={{ mb: 1 }} {...props} />\r\n                    ),\r\n                    ul: ({node, ...props}) => (\r\n                      <Box component=\"ul\" sx={{ pl: 4, mb: 1 }} {...props} />\r\n                    ),\r\n                    li: ({node, ...props}) => (\r\n                      <Box component=\"li\" sx={{ mb: 0.5 }} {...props} />\r\n                    ),\r\n                  }}\r\n                >\r\n                  {entry.text}\r\n                </ReactMarkdown>\r\n              ) : (\r\n                <Typography variant=\"body1\">{entry.text}</Typography>\r\n              )}\r\n              {entry.sender === \"ai\" && (\r\n                <Typography variant=\"caption\" sx={{ display: 'block', marginTop: 0.5 }}>\r\n                  Agent: {entry.agent} | GPT: {entry.gpt}\r\n                </Typography>\r\n              )}\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n\r\n        {/* Campo de entrada + dropdown GPT */}\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ display: 'flex', mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  sendMessage();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              sx={{\r\n                backgroundColor: '#1e1e1e',\r\n                input: { color: '#fff' },\r\n                '& fieldset': { borderColor: '#333' },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n              <SendIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>\r\n                Selecionar GPT\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecionar GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Modal de Edição */}\r\n      <Dialog open={editOpen} onClose={handleEditClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Editar Mensagem</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            value={editText}\r\n            onChange={(e) => setEditText(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditClose}>Cancelar</Button>\r\n          <Button variant=\"contained\" onClick={handleEditConfirm}>\r\n            Confirmar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}