{"ast":null,"code":"/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = ['autolink', 'destinationLiteral', 'destinationRaw', 'reference', 'titleQuote', 'titleApostrophe'];\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [{\n  character: '\\t',\n  after: '[\\\\r\\\\n]',\n  inConstruct: 'phrasing'\n}, {\n  character: '\\t',\n  before: '[\\\\r\\\\n]',\n  inConstruct: 'phrasing'\n}, {\n  character: '\\t',\n  inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n}, {\n  character: '\\r',\n  inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde', 'codeFencedMetaGraveAccent', 'codeFencedMetaTilde', 'destinationLiteral', 'headingAtx']\n}, {\n  character: '\\n',\n  inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde', 'codeFencedMetaGraveAccent', 'codeFencedMetaTilde', 'destinationLiteral', 'headingAtx']\n}, {\n  character: ' ',\n  after: '[\\\\r\\\\n]',\n  inConstruct: 'phrasing'\n}, {\n  character: ' ',\n  before: '[\\\\r\\\\n]',\n  inConstruct: 'phrasing'\n}, {\n  character: ' ',\n  inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n},\n// An exclamation mark can start an image, if it is followed by a link or\n// a link reference.\n{\n  character: '!',\n  after: '\\\\[',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n},\n// A quote can break out of a title.\n{\n  character: '\"',\n  inConstruct: 'titleQuote'\n},\n// A number sign could start an ATX heading if it starts a line.\n{\n  atBreak: true,\n  character: '#'\n}, {\n  character: '#',\n  inConstruct: 'headingAtx',\n  after: '(?:[\\r\\n]|$)'\n},\n// Dollar sign and percentage are not used in markdown.\n// An ampersand could start a character reference.\n{\n  character: '&',\n  after: '[#A-Za-z]',\n  inConstruct: 'phrasing'\n},\n// An apostrophe can break out of a title.\n{\n  character: \"'\",\n  inConstruct: 'titleApostrophe'\n},\n// A left paren could break out of a destination raw.\n{\n  character: '(',\n  inConstruct: 'destinationRaw'\n},\n// A left paren followed by `]` could make something into a link or image.\n{\n  before: '\\\\]',\n  character: '(',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n},\n// A right paren could start a list item or break out of a destination\n// raw.\n{\n  atBreak: true,\n  before: '\\\\d+',\n  character: ')'\n}, {\n  character: ')',\n  inConstruct: 'destinationRaw'\n},\n// An asterisk can start thematic breaks, list items, emphasis, strong.\n{\n  atBreak: true,\n  character: '*',\n  after: '(?:[ \\t\\r\\n*])'\n}, {\n  character: '*',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n},\n// A plus sign could start a list item.\n{\n  atBreak: true,\n  character: '+',\n  after: '(?:[ \\t\\r\\n])'\n},\n// A dash can start thematic breaks, list items, and setext heading\n// underlines.\n{\n  atBreak: true,\n  character: '-',\n  after: '(?:[ \\t\\r\\n-])'\n},\n// A dot could start a list item.\n{\n  atBreak: true,\n  before: '\\\\d+',\n  character: '.',\n  after: '(?:[ \\t\\r\\n]|$)'\n},\n// Slash, colon, and semicolon are not used in markdown for constructs.\n// A less than can start html (flow or text) or an autolink.\n// HTML could start with an exclamation mark (declaration, cdata, comment),\n// slash (closing tag), question mark (instruction), or a letter (tag).\n// An autolink also starts with a letter.\n// Finally, it could break out of a destination literal.\n{\n  atBreak: true,\n  character: '<',\n  after: '[!/?A-Za-z]'\n}, {\n  character: '<',\n  after: '[!/?A-Za-z]',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n}, {\n  character: '<',\n  inConstruct: 'destinationLiteral'\n},\n// An equals to can start setext heading underlines.\n{\n  atBreak: true,\n  character: '='\n},\n// A greater than can start block quotes and it can break out of a\n// destination literal.\n{\n  atBreak: true,\n  character: '>'\n}, {\n  character: '>',\n  inConstruct: 'destinationLiteral'\n},\n// Question mark and at sign are not used in markdown for constructs.\n// A left bracket can start definitions, references, labels,\n{\n  atBreak: true,\n  character: '['\n}, {\n  character: '[',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n}, {\n  character: '[',\n  inConstruct: ['label', 'reference']\n},\n// A backslash can start an escape (when followed by punctuation) or a\n// hard break (when followed by an eol).\n// Note: typical escapes are handled in `safe`!\n{\n  character: '\\\\',\n  after: '[\\\\r\\\\n]',\n  inConstruct: 'phrasing'\n},\n// A right bracket can exit labels.\n{\n  character: ']',\n  inConstruct: ['label', 'reference']\n},\n// Caret is not used in markdown for constructs.\n// An underscore can start emphasis, strong, or a thematic break.\n{\n  atBreak: true,\n  character: '_'\n}, {\n  character: '_',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n},\n// A grave accent can start code (fenced or text), or it can break out of\n// a grave accent code fence.\n{\n  atBreak: true,\n  character: '`'\n}, {\n  character: '`',\n  inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n}, {\n  character: '`',\n  inConstruct: 'phrasing',\n  notInConstruct: fullPhrasingSpans\n},\n// Left brace, vertical bar, right brace are not used in markdown for\n// constructs.\n// A tilde can start code (fenced).\n{\n  atBreak: true,\n  character: '~'\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}