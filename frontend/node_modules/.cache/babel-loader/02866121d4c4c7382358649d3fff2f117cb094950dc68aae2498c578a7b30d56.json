{"ast":null,"code":"/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport { EXIT, visit } from 'unist-util-visit';\nimport { toString } from 'mdast-util-to-string';\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false;\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if ('value' in node && /\\r?\\n|\\r/.test(node.value) || node.type === 'break') {\n      literalWithBreak = true;\n      return EXIT;\n    }\n  });\n  return Boolean((!node.depth || node.depth < 3) && toString(node) && (state.options.setext || literalWithBreak));\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}