{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Box, Drawer, List, ListItem, ListItemButton, ListItemText, Toolbar, Typography, TextField, Button, Paper, Divider, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst agents = [{\n  id: 1,\n  name: 'Agent Alpha'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[800],\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.common.white,\n  maxWidth: '80%',\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.spacing(2)\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const [taskId, setTaskId] = useState(null);\n  const chatEndRef = useRef(null);\n  const user_id = \"usuario_exemplo\";\n  const handleAgentSelect = agent => {\n    setSelectedAgent(agent);\n  };\n  const handleGptSelect = event => {\n    setSelectedGpt(event.target.value);\n  };\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    const provider = selectedAgent ? selectedAgent.name.toLowerCase() : selectedGpt;\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\n        user_id,\n        message,\n        provider\n      });\n      setHistory(response.data.history);\n      setTaskId(response.data.task_id); // Armazena o ID da tarefa\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n\n  // Verifica periodicamente o status da tarefa se houver um taskId\n  useEffect(() => {\n    let interval;\n    if (taskId) {\n      interval = setInterval(async () => {\n        try {\n          const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/task/${taskId}?user_id=${user_id}`);\n          if (res.data.status === \"completed\") {\n            setHistory(res.data.history);\n            setTaskId(null);\n            clearInterval(interval);\n          }\n        } catch (error) {\n          console.error(\"Erro ao verificar status da tarefa:\", error);\n        }\n      }, 3000); // verifica a cada 3 segundos\n    }\n    return () => clearInterval(interval);\n  }, [taskId, user_id]);\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      backgroundColor: '#121212',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#1e1e1e',\n          color: '#fff'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: \"Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: agents.map(agent => /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            selected: selectedAgent.id === agent.id,\n            onClick: () => handleAgentSelect(agent),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: agent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, agent.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: `${drawerWidth}px`,\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#121212',\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Chat com \", selectedAgent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          overflowY: 'auto',\n          mb: 2,\n          p: 2,\n          border: '1px solid #333',\n          borderRadius: 2,\n          backgroundColor: '#1e1e1e',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Digite sua mensagem...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                sendMessage();\n                e.preventDefault();\n              }\n            },\n            sx: {\n              backgroundColor: '#1e1e1e',\n              input: {\n                color: '#fff'\n              },\n              '& fieldset': {\n                borderColor: '#333'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: sendMessage,\n            sx: {\n              ml: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gpt-select-label\",\n              sx: {\n                color: \"#fff\"\n              },\n              children: \"Selecionar GPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gpt-select-label\",\n              value: selectedGpt,\n              label: \"Selecionar GPT\",\n              onChange: handleGptSelect,\n              sx: {\n                color: \"#fff\",\n                '.MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                  borderColor: \"#fff\"\n                },\n                '& .MuiSvgIcon-root': {\n                  color: \"#fff\"\n                }\n              },\n              children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: provider.id,\n                children: provider.name\n              }, provider.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"BIYLTS6ng/vVwwN+uooaOtPPgoo=\");\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","SendIcon","Box","Drawer","List","ListItem","ListItemButton","ListItemText","Toolbar","Typography","TextField","Button","Paper","Divider","FormControl","InputLabel","Select","MenuItem","styled","jsxDEV","_jsxDEV","drawerWidth","agents","id","name","gptProviders","MessageBubble","theme","sender","padding","spacing","backgroundColor","palette","primary","main","grey","color","contrastText","common","white","maxWidth","alignSelf","marginBottom","borderRadius","_c","Chat","_s","message","setMessage","history","setHistory","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","taskId","setTaskId","chatEndRef","user_id","handleAgentSelect","agent","handleGptSelect","event","target","value","sendMessage","trim","provider","toLowerCase","response","post","process","env","REACT_APP_BACKEND_URL","data","task_id","error","console","interval","setInterval","res","get","status","clearInterval","current","scrollIntoView","behavior","sx","display","height","children","variant","width","flexShrink","boxSizing","noWrap","fileName","_jsxFileName","lineNumber","columnNumber","map","disablePadding","selected","onClick","component","flexGrow","p","ml","flexDirection","mb","overflowY","border","entry","index","text","ref","fullWidth","placeholder","onChange","e","onKeyPress","key","preventDefault","input","borderColor","size","labelId","label","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Alpha' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: sender === 'user' ? theme.palette.primary.main : theme.palette.grey[800],\r\n  color: sender === 'user' ? theme.palette.primary.contrastText : theme.palette.common.white,\r\n  maxWidth: '80%',\r\n  alignSelf: sender === 'user' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(2),\r\n}));\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const [taskId, setTaskId] = useState(null);\r\n  const chatEndRef = useRef(null);\r\n  const user_id = \"usuario_exemplo\";\r\n\r\n  const handleAgentSelect = (agent) => {\r\n    setSelectedAgent(agent);\r\n  };\r\n\r\n  const handleGptSelect = (event) => {\r\n    setSelectedGpt(event.target.value);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n    const provider = selectedAgent ? selectedAgent.name.toLowerCase() : selectedGpt;\r\n    \r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/chat`, {\r\n        user_id,\r\n        message,\r\n        provider,\r\n      });\r\n      setHistory(response.data.history);\r\n      setTaskId(response.data.task_id); // Armazena o ID da tarefa\r\n      setMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  // Verifica periodicamente o status da tarefa se houver um taskId\r\n  useEffect(() => {\r\n    let interval;\r\n    if (taskId) {\r\n      interval = setInterval(async () => {\r\n        try {\r\n          const res = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/task/${taskId}?user_id=${user_id}`);\r\n          if (res.data.status === \"completed\") {\r\n            setHistory(res.data.history);\r\n            setTaskId(null);\r\n            clearInterval(interval);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erro ao verificar status da tarefa:\", error);\r\n        }\r\n      }, 3000); // verifica a cada 3 segundos\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [taskId, user_id]);\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh', backgroundColor: '#121212', color: '#fff' }}>\r\n      {/* Barra lateral para Agents */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          [`& .MuiDrawer-paper`]: {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n            backgroundColor: '#1e1e1e',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Agents\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n        <List>\r\n          {agents.map((agent) => (\r\n            <ListItem key={agent.id} disablePadding>\r\n              <ListItemButton\r\n                selected={selectedAgent.id === agent.id}\r\n                onClick={() => handleAgentSelect(agent)}\r\n              >\r\n                <ListItemText primary={agent.name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* Área principal do chat */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: `${drawerWidth}px`,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          backgroundColor: '#121212',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>\r\n          Chat com {selectedAgent.name}\r\n        </Typography>\r\n        \r\n        {/* Histórico do Chat */}\r\n        <Box\r\n          sx={{\r\n            flexGrow: 1,\r\n            overflowY: 'auto',\r\n            mb: 2,\r\n            p: 2,\r\n            border: '1px solid #333',\r\n            borderRadius: 2,\r\n            backgroundColor: '#1e1e1e',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          {history.map((entry, index) => (\r\n            <MessageBubble key={index} sender={entry.sender}>\r\n              <Typography variant=\"body1\">{entry.text}</Typography>\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </Box>\r\n        \r\n        {/* Campo de Entrada */}\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <Box sx={{ display: 'flex', mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Digite sua mensagem...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  sendMessage();\r\n                  e.preventDefault();\r\n                }\r\n              }}\r\n              sx={{\r\n                backgroundColor: '#1e1e1e',\r\n                input: { color: '#fff' },\r\n                '& fieldset': { borderColor: '#333' },\r\n              }}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n              <SendIcon />\r\n            </Button>\r\n          </Box>\r\n          \r\n          {/* Dropdown para escolher a API Gen AI */}\r\n          <Box>\r\n            <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n              <InputLabel id=\"gpt-select-label\" sx={{ color: \"#fff\" }}>\r\n                Selecionar GPT\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"gpt-select-label\"\r\n                value={selectedGpt}\r\n                label=\"Selecionar GPT\"\r\n                onChange={handleGptSelect}\r\n                sx={{\r\n                  color: \"#fff\",\r\n                  '.MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '&.Mui-focused .MuiOutlinedInput-notchedOutline': { borderColor: \"#fff\" },\r\n                  '& .MuiSvgIcon-root': { color: \"#fff\" }\r\n                }}\r\n              >\r\n                {gptProviders.map((provider) => (\r\n                  <MenuItem key={provider.id} value={provider.id}>\r\n                    {provider.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}