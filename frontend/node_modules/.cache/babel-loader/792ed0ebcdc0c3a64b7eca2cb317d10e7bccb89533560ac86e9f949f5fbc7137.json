{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudu-\\\\AdamChat\\\\AdamChat-OpenSource\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/components/Chat.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport SendIcon from '@mui/icons-material/Send';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { Box, Paper, Typography, TextField, IconButton, FormControl, InputLabel, Select, MenuItem, Button, AppBar, Toolbar, Divider, Slide } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useKeycloak } from '@react-keycloak/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst agents = [{\n  id: 1,\n  name: 'Agent Médico'\n}, {\n  id: 2,\n  name: 'Agent Beta'\n}, {\n  id: 3,\n  name: 'Agent Gamma'\n}];\nconst gptProviders = [{\n  id: 'chatgpt',\n  name: 'ChatGPT'\n}, {\n  id: 'gemini',\n  name: 'Gemini'\n}, {\n  id: 'outra_api',\n  name: 'Outra API'\n}];\n\n// Balão de mensagem com design moderno\nconst MessageBubble = styled(Paper)(({\n  theme,\n  sender\n}) => ({\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(2),\n  backgroundColor: sender === 'ai' ? '#f5f5f5' : theme.palette.primary.light,\n  color: sender === 'ai' ? '#000' : theme.palette.primary.contrastText,\n  maxWidth: '60%',\n  alignSelf: sender === 'ai' ? 'flex-start' : 'flex-end',\n  boxShadow: theme.shadows[2],\n  position: 'relative',\n  overflow: 'hidden',\n  animation: 'fadeIn 0.3s ease-in-out'\n}));\n_c = MessageBubble;\nconst Chat = () => {\n  _s();\n  const {\n    keycloak\n  } = useKeycloak();\n  const [message, setMessage] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const chatEndRef = useRef(null);\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\n  const sendMessage = async () => {\n    if (message.trim() === \"\") return;\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\n    const payload = {\n      user_id,\n      user_email,\n      message,\n      agent: selectedAgent.name.toLowerCase(),\n      gptProvider: selectedGpt\n    };\n    setMessage(\"\");\n    setHistory(prev => [...prev, {\n      sender: user_email,\n      text: message\n    }]);\n    try {\n      const response = await axios.post(endpoint, payload);\n      setHistory(prev => [...prev, ...response.data.history]);\n    } catch (error) {\n      console.error(\"Erro ao enviar mensagem:\", error);\n    }\n  };\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Chat com \", selectedAgent.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            minWidth: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Selecionar GPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedGpt,\n            onChange: e => setSelectedGpt(e.target.value),\n            label: \"Selecionar GPT\",\n            children: gptProviders.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: provider.id,\n              children: provider.name\n            }, provider.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        p: 3,\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [history.map((entry, index) => /*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"up\",\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(MessageBubble, {\n          sender: entry.sender,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            remarkPlugins: [remarkGfm],\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        p: 2,\n        borderTop: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Digite sua mensagem...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        sx: {\n          ml: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"Ycd6kUdRtGC3L8fpyfnS/1w07VI=\", false, function () {\n  return [useKeycloak];\n});\n_c2 = Chat;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","ReactMarkdown","remarkGfm","SendIcon","ReplayIcon","DeleteIcon","ContentCopyIcon","Box","Paper","Typography","TextField","IconButton","FormControl","InputLabel","Select","MenuItem","Button","AppBar","Toolbar","Divider","Slide","styled","useKeycloak","jsxDEV","_jsxDEV","agents","id","name","gptProviders","MessageBubble","theme","sender","padding","spacing","borderRadius","backgroundColor","palette","primary","light","color","contrastText","maxWidth","alignSelf","boxShadow","shadows","position","overflow","animation","_c","Chat","_s","keycloak","message","setMessage","history","setHistory","chatEndRef","selectedAgent","setSelectedAgent","selectedGpt","setSelectedGpt","user_id","tokenParsed","sub","user_email","email","sendMessage","trim","endpoint","process","env","REACT_APP_BACKEND_URL","payload","agent","toLowerCase","gptProvider","prev","text","response","post","data","error","console","current","scrollIntoView","behavior","sx","display","flexDirection","height","children","variant","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","size","minWidth","value","onChange","e","target","label","map","provider","overflowY","p","mt","gap","entry","index","direction","in","remarkPlugins","ref","borderTop","fullWidth","placeholder","onClick","ml","_c2","$RefreshReg$"],"sources":["C:/Users/dudu-/AdamChat/AdamChat-OpenSource/frontend/src/components/Chat.js"],"sourcesContent":["// src/components/Chat.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider,\r\n  Slide,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\n\r\nconst agents = [\r\n  { id: 1, name: 'Agent Médico' },\r\n  { id: 2, name: 'Agent Beta' },\r\n  { id: 3, name: 'Agent Gamma' },\r\n];\r\n\r\nconst gptProviders = [\r\n  { id: 'chatgpt', name: 'ChatGPT' },\r\n  { id: 'gemini', name: 'Gemini' },\r\n  { id: 'outra_api', name: 'Outra API' },\r\n];\r\n\r\n// Balão de mensagem com design moderno\r\nconst MessageBubble = styled(Paper)(({ theme, sender }) => ({\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.spacing(2),\r\n  backgroundColor: sender === 'ai' ? '#f5f5f5' : theme.palette.primary.light,\r\n  color: sender === 'ai' ? '#000' : theme.palette.primary.contrastText,\r\n  maxWidth: '60%',\r\n  alignSelf: sender === 'ai' ? 'flex-start' : 'flex-end',\r\n  boxShadow: theme.shadows[2],\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  animation: 'fadeIn 0.3s ease-in-out',\r\n}));\r\n\r\nconst Chat = () => {\r\n  const { keycloak } = useKeycloak();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const chatEndRef = useRef(null);\r\n  const [selectedAgent, setSelectedAgent] = useState(agents[0]);\r\n  const [selectedGpt, setSelectedGpt] = useState(gptProviders[0].id);\r\n  const user_id = keycloak.tokenParsed ? keycloak.tokenParsed.sub : \"usuario_exemplo\";\r\n  const user_email = keycloak.tokenParsed ? keycloak.tokenParsed.email : \"usuario@example.com\";\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() === \"\") return;\r\n\r\n    const endpoint = `${process.env.REACT_APP_BACKEND_URL}/agent`;\r\n    const payload = {\r\n      user_id,\r\n      user_email,\r\n      message,\r\n      agent: selectedAgent.name.toLowerCase(),\r\n      gptProvider: selectedGpt,\r\n    };\r\n\r\n    setMessage(\"\");\r\n    setHistory(prev => [...prev, { sender: user_email, text: message }]);\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, payload);\r\n      setHistory(prev => [...prev, ...response.data.history]);\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar mensagem:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      {/* Navbar superior fixa */}\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n            Chat com {selectedAgent.name}\r\n          </Typography>\r\n          <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 150 }}>\r\n            <InputLabel>Selecionar GPT</InputLabel>\r\n            <Select\r\n              value={selectedGpt}\r\n              onChange={(e) => setSelectedGpt(e.target.value)}\r\n              label=\"Selecionar GPT\"\r\n            >\r\n              {gptProviders.map((provider) => (\r\n                <MenuItem key={provider.id} value={provider.id}>\r\n                  {provider.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Histórico de Mensagens */}\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflowY: 'auto',\r\n          p: 3,\r\n          mt: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: 2,\r\n        }}\r\n      >\r\n        {history.map((entry, index) => (\r\n          <Slide direction=\"up\" in={true} key={index}>\r\n            <MessageBubble sender={entry.sender}>\r\n              <ReactMarkdown remarkPlugins={[remarkGfm]}>{entry.text}</ReactMarkdown>\r\n            </MessageBubble>\r\n          </Slide>\r\n        ))}\r\n        <div ref={chatEndRef} />\r\n      </Box>\r\n\r\n      {/* Campo de Entrada de Mensagem */}\r\n      <Box sx={{ display: 'flex', p: 2, borderTop: '1px solid #ddd' }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Digite sua mensagem...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ ml: 1 }}>\r\n          <SendIcon />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SACEC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,SAAS,EACTC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,KAAK,QACA,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAe,CAAC,EAC/B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAa,CAAC,EAC7B;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAc,CAAC,CAC/B;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEF,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,EAClC;EAAED,EAAE,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAS,CAAC,EAChC;EAAED,EAAE,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAY,CAAC,CACvC;;AAED;AACA,MAAME,aAAa,GAAGR,MAAM,CAACb,KAAK,CAAC,CAAC,CAAC;EAAEsB,KAAK;EAAEC;AAAO,CAAC,MAAM;EAC1DC,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;EACzBC,YAAY,EAAEJ,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;EAC9BE,eAAe,EAAEJ,MAAM,KAAK,IAAI,GAAG,SAAS,GAAGD,KAAK,CAACM,OAAO,CAACC,OAAO,CAACC,KAAK;EAC1EC,KAAK,EAAER,MAAM,KAAK,IAAI,GAAG,MAAM,GAAGD,KAAK,CAACM,OAAO,CAACC,OAAO,CAACG,YAAY;EACpEC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAEX,MAAM,KAAK,IAAI,GAAG,YAAY,GAAG,UAAU;EACtDY,SAAS,EAAEb,KAAK,CAACc,OAAO,CAAC,CAAC,CAAC;EAC3BC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,QAAQ;EAClBC,SAAS,EAAE;AACb,CAAC,CAAC,CAAC;AAACC,EAAA,GAXEnB,aAAa;AAanB,MAAMoB,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAS,CAAC,GAAG7B,WAAW,CAAC,CAAC;EAClC,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyD,OAAO,EAAEC,UAAU,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM2D,UAAU,GAAG1D,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAAC2D,aAAa,EAAEC,gBAAgB,CAAC,GAAG7D,QAAQ,CAAC4B,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC+B,YAAY,CAAC,CAAC,CAAC,CAACF,EAAE,CAAC;EAClE,MAAMmC,OAAO,GAAGV,QAAQ,CAACW,WAAW,GAAGX,QAAQ,CAACW,WAAW,CAACC,GAAG,GAAG,iBAAiB;EACnF,MAAMC,UAAU,GAAGb,QAAQ,CAACW,WAAW,GAAGX,QAAQ,CAACW,WAAW,CAACG,KAAK,GAAG,qBAAqB;EAE5F,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAId,OAAO,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE3B,MAAMC,QAAQ,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,QAAQ;IAC7D,MAAMC,OAAO,GAAG;MACdX,OAAO;MACPG,UAAU;MACVZ,OAAO;MACPqB,KAAK,EAAEhB,aAAa,CAAC9B,IAAI,CAAC+C,WAAW,CAAC,CAAC;MACvCC,WAAW,EAAEhB;IACf,CAAC;IAEDN,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE7C,MAAM,EAAEiC,UAAU;MAAEa,IAAI,EAAEzB;IAAQ,CAAC,CAAC,CAAC;IAEpE,IAAI;MACF,MAAM0B,QAAQ,GAAG,MAAM9E,KAAK,CAAC+E,IAAI,CAACX,QAAQ,EAAEI,OAAO,CAAC;MACpDjB,UAAU,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGE,QAAQ,CAACE,IAAI,CAAC1B,OAAO,CAAC,CAAC;IACzD,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDlF,SAAS,CAAC,MAAM;IACd,IAAIyD,UAAU,CAAC2B,OAAO,EAAE;MACtB3B,UAAU,CAAC2B,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE,CAAC/B,OAAO,CAAC,CAAC;EAEb,oBACE9B,OAAA,CAACjB,GAAG;IAAC+E,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAErElE,OAAA,CAACP,MAAM;MAAC4B,QAAQ,EAAC,OAAO;MAAA6C,QAAA,eACtBlE,OAAA,CAACN,OAAO;QAAAwE,QAAA,gBACNlE,OAAA,CAACf,UAAU;UAACkF,OAAO,EAAC,IAAI;UAACL,EAAE,EAAE;YAAEM,QAAQ,EAAE;UAAE,CAAE;UAAAF,QAAA,GAAC,WACnC,EAACjC,aAAa,CAAC9B,IAAI;QAAA;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACbxE,OAAA,CAACZ,WAAW;UAAC+E,OAAO,EAAC,UAAU;UAACM,IAAI,EAAC,OAAO;UAACX,EAAE,EAAE;YAAEY,QAAQ,EAAE;UAAI,CAAE;UAAAR,QAAA,gBACjElE,OAAA,CAACX,UAAU;YAAA6E,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACvCxE,OAAA,CAACV,MAAM;YACLqF,KAAK,EAAExC,WAAY;YACnByC,QAAQ,EAAGC,CAAC,IAAKzC,cAAc,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,KAAK,EAAC,gBAAgB;YAAAb,QAAA,EAErB9D,YAAY,CAAC4E,GAAG,CAAEC,QAAQ,iBACzBjF,OAAA,CAACT,QAAQ;cAAmBoF,KAAK,EAAEM,QAAQ,CAAC/E,EAAG;cAAAgE,QAAA,EAC5Ce,QAAQ,CAAC9E;YAAI,GADD8E,QAAQ,CAAC/E,EAAE;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGTxE,OAAA,CAACjB,GAAG;MACF+E,EAAE,EAAE;QACFM,QAAQ,EAAE,CAAC;QACXc,SAAS,EAAE,MAAM;QACjBC,CAAC,EAAE,CAAC;QACJC,EAAE,EAAE,CAAC;QACLrB,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBqB,GAAG,EAAE;MACP,CAAE;MAAAnB,QAAA,GAEDpC,OAAO,CAACkD,GAAG,CAAC,CAACM,KAAK,EAAEC,KAAK,kBACxBvF,OAAA,CAACJ,KAAK;QAAC4F,SAAS,EAAC,IAAI;QAACC,EAAE,EAAE,IAAK;QAAAvB,QAAA,eAC7BlE,OAAA,CAACK,aAAa;UAACE,MAAM,EAAE+E,KAAK,CAAC/E,MAAO;UAAA2D,QAAA,eAClClE,OAAA,CAACvB,aAAa;YAACiH,aAAa,EAAE,CAAChH,SAAS,CAAE;YAAAwF,QAAA,EAAEoB,KAAK,CAACjC;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D;MAAC,GAHmBe,KAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInC,CACR,CAAC,eACFxE,OAAA;QAAK2F,GAAG,EAAE3D;MAAW;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAGNxE,OAAA,CAACjB,GAAG;MAAC+E,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEoB,CAAC,EAAE,CAAC;QAAES,SAAS,EAAE;MAAiB,CAAE;MAAA1B,QAAA,gBAC9DlE,OAAA,CAACd,SAAS;QACR2G,SAAS;QACT1B,OAAO,EAAC,UAAU;QAClB2B,WAAW,EAAC,wBAAwB;QACpCnB,KAAK,EAAE/C,OAAQ;QACfgD,QAAQ,EAAGC,CAAC,IAAKhD,UAAU,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFxE,OAAA,CAACR,MAAM;QAAC2E,OAAO,EAAC,WAAW;QAACpD,KAAK,EAAC,SAAS;QAACgF,OAAO,EAAErD,WAAY;QAACoB,EAAE,EAAE;UAAEkC,EAAE,EAAE;QAAE,CAAE;QAAA9B,QAAA,eAC9ElE,OAAA,CAACrB,QAAQ;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CArGID,IAAI;EAAA,QACa3B,WAAW;AAAA;AAAAmG,GAAA,GAD5BxE,IAAI;AAuGV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAyE,GAAA;AAAAC,YAAA,CAAA1E,EAAA;AAAA0E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}