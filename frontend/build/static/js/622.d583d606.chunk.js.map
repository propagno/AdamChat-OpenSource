{"version":3,"file":"static/js/622.d583d606.chunk.js","mappings":"gPAIA,MAmQA,EAnQuBA,KACrB,MAAM,KAAEC,EAAI,gBAAEC,EAAe,MAAEC,IAAUC,EAAAA,EAAAA,OAClCC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,CACzDC,aAAc,KACdC,eAAgB,KAChBC,QAAS,KACTC,QAAS,KACTC,UAAW,QAENC,EAAaC,IAAkBP,EAAAA,EAAAA,WAAS,IAE/CQ,EAAAA,EAAAA,YAAU,KACRC,GAAgB,GACf,IAEH,MAAMA,EAAiBA,KAErB,MAAMC,EAAmBC,IAGnBC,EAAqBC,IAGrBC,EAAcC,IAGdC,EAAcC,IAGdC,EAAgB,CACpBC,OAAQxB,EAAkB,UAAY,QACtCyB,QAASzB,EACL,qBAAwB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,WAAY,4BACtC,qBACJC,QAAS,CACP3B,kBACAD,OACAE,UAIJG,EAAqB,CACnBE,aAAcS,EACdR,eAAgBU,EAChBT,QAASW,EACTV,QAASY,EACTX,UAAWa,GACX,EAGEP,EAAmBA,KACvB,IACEV,aAAasB,QAAQ,YAAa,cAClC,MAAMC,EAAQvB,aAAawB,QAAQ,aAGnC,OAFAxB,aAAayB,WAAW,aAEjB,CACLP,OAAkB,eAAVK,EAAyB,UAAY,QAC7CJ,QAAmB,eAAVI,EACL,gDACA,wDACJF,QAAS,CACPK,YAAaC,OAAO3B,aACpB4B,MAAOC,OAAOC,KAAK9B,cAAc+B,QAGvC,CAAE,MAAOpC,GACP,MAAO,CACLuB,OAAQ,QACRC,QAAS,+BACTE,QAAS,CAAE1B,MAAOA,EAAMwB,SAE5B,GAGIP,EAAqBA,KACzB,IACEX,eAAeqB,QAAQ,YAAa,cACpC,MAAMC,EAAQtB,eAAeuB,QAAQ,aAGrC,OAFAvB,eAAewB,WAAW,aAEnB,CACLP,OAAkB,eAAVK,EAAyB,UAAY,QAC7CJ,QAAmB,eAAVI,EACL,kDACA,0DACJF,QAAS,CACPK,YAAaC,OAAO1B,eACpB2B,MAAOC,OAAOC,KAAK7B,gBAAgB8B,QAGzC,CAAE,MAAOpC,GACP,MAAO,CACLuB,OAAQ,QACRC,QAAS,iCACTE,QAAS,CAAE1B,MAAOA,EAAMwB,SAE5B,GAGIL,EAAcA,KAClB,IACEkB,SAASC,OAAS,iCAClB,MAAMC,EAAYF,SAASC,OAAOE,SAAS,0BAG3C,OAFAH,SAASC,OAAS,8DAEX,CACLf,OAAQgB,EAAY,UAAY,QAChCf,QAASe,EACL,4CACA,oDACJb,QAAS,CACPe,QAASC,UAAUC,cACnBC,MAAOP,SAASC,OAAOO,MAAM,KAAKC,QAAOC,GAAKA,EAAEC,SAAQZ,QAG9D,CAAE,MAAOpC,GACP,MAAO,CACLuB,OAAQ,QACRC,QAAS,0BACTE,QAAS,CAAE1B,MAAOA,EAAMwB,SAE5B,GAGIH,EAAcA,KACX,CACLE,OAAQmB,UAAUO,OAAS,UAAY,UACvCzB,QAASkB,UAAUO,OACf,mCACA,8BACJvB,QAAS,CACPwB,OAAQR,UAAUO,OAClBE,UAAWT,UAAUS,aAyBrBC,EAAoB7B,IACxB,OAAQA,GACN,IAAK,UAAW,MAAO,UACvB,IAAK,UAAW,MAAO,UACvB,IAAK,QAAS,MAAO,SACrB,QAAS,MAAO,YAClB,EAGF,OACE8B,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAMC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,0CAErBH,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CAACH,UAAU,OAAMC,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAKC,OAAM,CAAAH,UACVH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,MAAKC,SAAC,kCACpBC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAAQ,UACRC,KAAK,KACLC,QAASlD,EAAe2C,SACzB,6BAKLH,EAAAA,EAAAA,MAACK,EAAAA,EAAKM,KAAI,CAAAR,SAAA,EACRC,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CAACV,UAAU,OAAMC,SACxBtB,OAAOgC,QAAQhE,GAAmBiE,KAAIC,IAAA,IAAEC,EAAKC,GAAOF,EAAA,OACnDE,IACEjB,EAAAA,EAAAA,MAACY,EAAAA,EAAUM,KAAI,CAEbhB,UAAU,oDAAmDC,SAAA,EAE7DH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASa,EAAIG,OAAO,GAAGC,cAAgBJ,EAAIK,MAAM,MACjDjB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBAAiBC,SAAEc,EAAO9C,cAEzCiC,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,GAAIxB,EAAiBkB,EAAO/C,QAAQiC,SACtB,YAAlBc,EAAO/C,OAAuB,KACZ,YAAlB+C,EAAO/C,OAAuB,gBAAY,WATxC8C,EAYR,OAILhB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAAQ,kBACRE,QAASA,IAAMpD,GAAgBD,GAAa8C,SAE3C9C,EAAc,mBAAqB,sBAGtC+C,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,QAAQ,SACRE,QAASA,KACH/B,OAAO6C,QAAQ,0FA9ETC,MACtB,IACEzE,aAAa0E,QACbzE,eAAeyE,QAGf1C,SAASC,OAAOO,MAAM,KAAKmC,SAAQ1C,IACjC,MAAO2C,GAAQ3C,EAAOU,OAAOH,MAAM,KAC/BoC,IACF5C,SAASC,OAAS,GAAG2C,oDACvB,IAGFC,MAAM,qEACNlD,OAAOmD,SAASC,QAClB,CAAE,MAAOpF,GACPkF,MAAM,iCAAiClF,EAAMwB,UAC/C,GA8DcsD,EACF,EACAtB,SACH,iCAKF9C,IACC2C,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,SAClC6B,KAAKC,UACJpD,OAAOgC,QAAQhE,GAAmBqF,QAAO,CAACC,EAAGC,KAAoB,IAAjBpB,EAAKzC,GAAM6D,EAEzD,OADAD,EAAInB,IAAY,OAALzC,QAAK,IAALA,OAAK,EAALA,EAAOF,UAAW,CAAC,EACvB8D,CAAG,GACT,CAAC,GACJ,KAAM,eAQlBnC,EAAAA,EAAAA,MAACqC,EAAAA,EAAK,CAAC7B,QAAQ,OAAML,SAAA,EACnBC,EAAAA,EAAAA,KAACiC,EAAAA,EAAMC,QAAO,CAAAnC,SAAC,uCACfC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mGAGHH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6CACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mEAGE,C","sources":["pages/AuthDiagnostic.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Container, Card, Button, Alert, ListGroup, Badge } from 'react-bootstrap';\r\n\r\nconst AuthDiagnostic = () => {\r\n  const { user, isAuthenticated, error } = useAuth();\r\n  const [diagnosticResults, setDiagnosticResults] = useState({\r\n    localStorage: null,\r\n    sessionStorage: null,\r\n    cookies: null,\r\n    network: null,\r\n    authState: null\r\n  });\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  useEffect(() => {\r\n    runDiagnostics();\r\n  }, []);\r\n\r\n  const runDiagnostics = () => {\r\n    // Verificar localStorage\r\n    const localStorageTest = testLocalStorage();\r\n    \r\n    // Verificar sessionStorage\r\n    const sessionStorageTest = testSessionStorage();\r\n    \r\n    // Verificar cookies\r\n    const cookiesTest = testCookies();\r\n    \r\n    // Verificar rede\r\n    const networkTest = testNetwork();\r\n    \r\n    // Verificar estado de autenticação\r\n    const authStateTest = {\r\n      status: isAuthenticated ? 'success' : 'error',\r\n      message: isAuthenticated \r\n        ? `Autenticado como ${user?.username || 'usuário desconhecido'}`\r\n        : 'Não autenticado',\r\n      details: {\r\n        isAuthenticated,\r\n        user,\r\n        error\r\n      }\r\n    };\r\n    \r\n    setDiagnosticResults({\r\n      localStorage: localStorageTest,\r\n      sessionStorage: sessionStorageTest,\r\n      cookies: cookiesTest,\r\n      network: networkTest,\r\n      authState: authStateTest\r\n    });\r\n  };\r\n\r\n  const testLocalStorage = () => {\r\n    try {\r\n      localStorage.setItem('test-item', 'test-value');\r\n      const value = localStorage.getItem('test-item');\r\n      localStorage.removeItem('test-item');\r\n      \r\n      return {\r\n        status: value === 'test-value' ? 'success' : 'error',\r\n        message: value === 'test-value' \r\n          ? 'localStorage está funcionando corretamente' \r\n          : 'localStorage não está funcionando como esperado',\r\n        details: {\r\n          available: !!window.localStorage,\r\n          items: Object.keys(localStorage).length\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Erro ao acessar localStorage',\r\n        details: { error: error.message }\r\n      };\r\n    }\r\n  };\r\n\r\n  const testSessionStorage = () => {\r\n    try {\r\n      sessionStorage.setItem('test-item', 'test-value');\r\n      const value = sessionStorage.getItem('test-item');\r\n      sessionStorage.removeItem('test-item');\r\n      \r\n      return {\r\n        status: value === 'test-value' ? 'success' : 'error',\r\n        message: value === 'test-value' \r\n          ? 'sessionStorage está funcionando corretamente' \r\n          : 'sessionStorage não está funcionando como esperado',\r\n        details: {\r\n          available: !!window.sessionStorage,\r\n          items: Object.keys(sessionStorage).length\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Erro ao acessar sessionStorage',\r\n        details: { error: error.message }\r\n      };\r\n    }\r\n  };\r\n\r\n  const testCookies = () => {\r\n    try {\r\n      document.cookie = \"test-cookie=test-value; path=/\";\r\n      const hasCookie = document.cookie.includes('test-cookie=test-value');\r\n      document.cookie = \"test-cookie=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\r\n      \r\n      return {\r\n        status: hasCookie ? 'success' : 'error',\r\n        message: hasCookie \r\n          ? 'Cookies estão funcionando corretamente' \r\n          : 'Cookies não estão funcionando como esperado',\r\n        details: {\r\n          enabled: navigator.cookieEnabled,\r\n          count: document.cookie.split(';').filter(c => c.trim()).length\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        status: 'error',\r\n        message: 'Erro ao acessar cookies',\r\n        details: { error: error.message }\r\n      };\r\n    }\r\n  };\r\n\r\n  const testNetwork = () => {\r\n    return {\r\n      status: navigator.onLine ? 'success' : 'warning',\r\n      message: navigator.onLine \r\n        ? 'Conexão de rede disponível' \r\n        : 'Dispositivo está offline',\r\n      details: {\r\n        online: navigator.onLine,\r\n        userAgent: navigator.userAgent\r\n      }\r\n    };\r\n  };\r\n\r\n  const clearAllStorage = () => {\r\n    try {\r\n      localStorage.clear();\r\n      sessionStorage.clear();\r\n      \r\n      // Limpar cookies\r\n      document.cookie.split(';').forEach(cookie => {\r\n        const [name] = cookie.trim().split('=');\r\n        if (name) {\r\n          document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\r\n        }\r\n      });\r\n      \r\n      alert('Armazenamento limpo com sucesso. A página será recarregada.');\r\n      window.location.reload();\r\n    } catch (error) {\r\n      alert(`Erro ao limpar armazenamento: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const getStatusVariant = (status) => {\r\n    switch (status) {\r\n      case 'success': return 'success';\r\n      case 'warning': return 'warning';\r\n      case 'error': return 'danger';\r\n      default: return 'secondary';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      <h1 className=\"mb-4\">Diagnóstico de Autenticação</h1>\r\n      \r\n      <Card className=\"mb-4\">\r\n        <Card.Header>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <h2 className=\"m-0\">Resultados do Diagnóstico</h2>\r\n            <Button \r\n              variant=\"primary\" \r\n              size=\"sm\"\r\n              onClick={runDiagnostics}\r\n            >\r\n              Executar Novamente\r\n            </Button>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <ListGroup className=\"mb-3\">\r\n            {Object.entries(diagnosticResults).map(([key, result]) => (\r\n              result && (\r\n                <ListGroup.Item \r\n                  key={key}\r\n                  className=\"d-flex justify-content-between align-items-center\"\r\n                >\r\n                  <div>\r\n                    <strong>{key.charAt(0).toUpperCase() + key.slice(1)}</strong>\r\n                    <p className=\"mb-0 text-muted\">{result.message}</p>\r\n                  </div>\r\n                  <Badge bg={getStatusVariant(result.status)}>\r\n                    {result.status === 'success' ? 'OK' : \r\n                     result.status === 'warning' ? 'Atenção' : 'Erro'}\r\n                  </Badge>\r\n                </ListGroup.Item>\r\n              )\r\n            ))}\r\n          </ListGroup>\r\n          \r\n          <div className=\"d-flex justify-content-between\">\r\n            <Button \r\n              variant=\"outline-primary\" \r\n              onClick={() => setShowDetails(!showDetails)}\r\n            >\r\n              {showDetails ? 'Ocultar Detalhes' : 'Mostrar Detalhes'}\r\n            </Button>\r\n            \r\n            <Button \r\n              variant=\"danger\" \r\n              onClick={() => {\r\n                if (window.confirm('Tem certeza que deseja limpar todo o armazenamento? Isso fará logout de sua conta.')) {\r\n                  clearAllStorage();\r\n                }\r\n              }}\r\n            >\r\n              Limpar Todo Armazenamento\r\n            </Button>\r\n          </div>\r\n          \r\n          {showDetails && (\r\n            <div className=\"mt-4\">\r\n              <h3>Detalhes Técnicos</h3>\r\n              <pre className=\"bg-light p-3 rounded\">\r\n                {JSON.stringify(\r\n                  Object.entries(diagnosticResults).reduce((acc, [key, value]) => {\r\n                    acc[key] = value?.details || {};\r\n                    return acc;\r\n                  }, {}), \r\n                  null, 2\r\n                )}\r\n              </pre>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n      \r\n      <Alert variant=\"info\">\r\n        <Alert.Heading>Problemas com Autenticação?</Alert.Heading>\r\n        <p>\r\n          Se você está enfrentando problemas para fazer login, tente as seguintes soluções:\r\n        </p>\r\n        <ol>\r\n          <li>Limpe o armazenamento do navegador usando o botão acima</li>\r\n          <li>Verifique sua conexão com a internet</li>\r\n          <li>Certifique-se de que cookies estão habilitados no seu navegador</li>\r\n          <li>Tente usar outro navegador</li>\r\n          <li>Entre em contato com o suporte se o problema persistir</li>\r\n        </ol>\r\n      </Alert>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthDiagnostic; "],"names":["AuthDiagnostic","user","isAuthenticated","error","useAuth","diagnosticResults","setDiagnosticResults","useState","localStorage","sessionStorage","cookies","network","authState","showDetails","setShowDetails","useEffect","runDiagnostics","localStorageTest","testLocalStorage","sessionStorageTest","testSessionStorage","cookiesTest","testCookies","networkTest","testNetwork","authStateTest","status","message","username","details","setItem","value","getItem","removeItem","available","window","items","Object","keys","length","document","cookie","hasCookie","includes","enabled","navigator","cookieEnabled","count","split","filter","c","trim","onLine","online","userAgent","getStatusVariant","_jsxs","Container","className","children","_jsx","Card","Header","Button","variant","size","onClick","Body","ListGroup","entries","map","_ref","key","result","Item","charAt","toUpperCase","slice","Badge","bg","confirm","clearAllStorage","clear","forEach","name","alert","location","reload","JSON","stringify","reduce","acc","_ref2","Alert","Heading"],"sourceRoot":""}