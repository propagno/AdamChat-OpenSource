{"version":3,"file":"static/js/216.8843ca02.chunk.js","mappings":"wMAKA,MAoGA,EApGaA,KACX,MAAM,gBAAEC,EAAe,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OACrCC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAS,GAGnD,GAAIN,EACF,OAAOW,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,aAAaC,SAAO,IAG1C,MAAMC,EAAcC,UACdP,EACEL,GAAYG,SACRN,EAAM,CAAEG,WAAUG,aAG1BG,GAAiB,EACnB,EAGF,OACEC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,2BACJP,EAAAA,EAAAA,KAAA,KAAGM,UAAU,mBAAkBC,SAAC,oGAIhCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BP,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcC,SAAC,kBAC9BP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,iBACJP,EAAAA,EAAAA,KAAA,KAAAO,SAAG,iFAGLC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BP,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcC,SAAC,kBAC9BP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,yBACJP,EAAAA,EAAAA,KAAA,KAAAO,SAAG,6EAGLC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BP,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcC,SAAC,kBAC9BP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,8BACJP,EAAAA,EAAAA,KAAA,KAAAO,SAAG,kFAINT,GACCU,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBP,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAY,qBACZC,MAAOlB,EACPmB,SAAWC,GAAMnB,EAAYmB,EAAEC,OAAOH,OACtCL,UAAU,iBAEZN,EAAAA,EAAAA,KAAA,SACES,KAAK,WACLC,YAAY,QACZC,MAAOf,EACPgB,SAAWC,GAAMhB,EAAYgB,EAAEC,OAAOH,OACtCL,UAAU,iBAEZN,EAAAA,EAAAA,KAAA,UACEM,UAAU,eACVS,QAASX,EACTY,SAAUzB,EAAQgB,SAEjBhB,EAAU,cAAgB,YAE7BS,EAAAA,EAAAA,KAAA,UACEM,UAAU,gBACVS,QAASA,IAAMhB,GAAiB,GAAOQ,SACxC,iBAKHP,EAAAA,EAAAA,KAAA,UACEM,UAAU,eACVS,QAASX,EAAYG,SACtB,yBAKFhB,IACCS,EAAAA,EAAAA,KAAA,KAAGM,UAAU,eAAcC,SAAC,uDAG9BP,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,2BAAuBP,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACf,GAAG,eAAeI,UAAU,aAAYC,SAAC,0BAA4B,QAAIP,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACf,GAAG,mBAAmBI,UAAU,kBAAiBC,SAAC,kDAGjK,C","sources":["components/layout/Home/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { Navigate, Link } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst Home = () => {\r\n  const { isAuthenticated, login, loading } = useAuth();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showLoginForm, setShowLoginForm] = useState(false);\r\n  \r\n  // Se j√° est√° autenticado, redireciona para o dashboard\r\n  if (isAuthenticated) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n  \r\n  const handleLogin = async () => {\r\n    if (showLoginForm) {\r\n      if (username && password) {\r\n        await login({ username, password });\r\n      }\r\n    } else {\r\n      setShowLoginForm(true);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-content\">\r\n        <h1>Bem-vindo ao AdamChat</h1>\r\n        <p className=\"home-description\">\r\n          Plataforma integrada para gerenciamento de atendimentos e gera√ß√£o de conte√∫do com IA.\r\n        </p>\r\n        \r\n        <div className=\"home-features\">\r\n          <div className=\"feature-card\">\r\n            <div className=\"feature-icon\">üí¨</div>\r\n            <h3>Chat com IA</h3>\r\n            <p>Interaja com modelos avan√ßados de IA para obter respostas r√°pidas.</p>\r\n          </div>\r\n          \r\n          <div className=\"feature-card\">\r\n            <div className=\"feature-icon\">üìù</div>\r\n            <h3>Fichas de Pacientes</h3>\r\n            <p>Gerencie informa√ß√µes de pacientes de forma segura e eficiente.</p>\r\n          </div>\r\n          \r\n          <div className=\"feature-card\">\r\n            <div className=\"feature-icon\">üìö</div>\r\n            <h3>Gera√ß√£o de E-books</h3>\r\n            <p>Crie conte√∫do personalizado com ajuda da intelig√™ncia artificial.</p>\r\n          </div>\r\n        </div>\r\n        \r\n        {showLoginForm ? (\r\n          <div className=\"login-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nome de usu√°rio\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"login-input\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"login-input\"\r\n            />\r\n            <button \r\n              className=\"login-button\" \r\n              onClick={handleLogin}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Entrando...' : 'Entrar'}\r\n            </button>\r\n            <button \r\n              className=\"cancel-button\" \r\n              onClick={() => setShowLoginForm(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <button \r\n            className=\"login-button\" \r\n            onClick={handleLogin}\r\n          >\r\n            Entrar na Plataforma\r\n          </button>\r\n        )}\r\n        \r\n        {loading && (\r\n          <p className=\"loading-text\">Conectando ao servi√ßo de autentica√ß√£o...</p>\r\n        )}\r\n        \r\n        <div className=\"login-help\">\r\n          <p>Problemas para entrar? <Link to=\"/login-reset\" className=\"reset-link\">Limpar dados de login</Link> ou <Link to=\"/auth-diagnostic\" className=\"diagnostic-link\">Diagn√≥stico de autentica√ß√£o</Link></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home; "],"names":["Home","isAuthenticated","login","loading","useAuth","username","setUsername","useState","password","setPassword","showLoginForm","setShowLoginForm","_jsx","Navigate","to","replace","handleLogin","async","className","children","_jsxs","type","placeholder","value","onChange","e","target","onClick","disabled","Link"],"sourceRoot":""}